
# Copyright 2024 OASIS Open
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

@prefix : <https://www.omg.org/spec/KerML/shapes/20240801#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix jazz_am: <http://jazz.net/ns/dm/linktypes#> .
@prefix oslc: <http://open-services.net/ns/core#> .
@prefix oslc_kerml: <http://www.omg.org/spec/kerml#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

: a oslc:ResourceShapeConstraints ;
    rdfs:label "OSLC  Kernel Modeling Language (KerML) Constraints" ;
    dcterms:dateCopyrighted "2012-2024" ;
    dcterms:description "<p>Constraints on vocabulary terms defined in the OSLC Kernel Modeling Language (KerML) namespace.</p>"^^rdf:XMLLiteral ;
    dcterms:hasVersion "PSD01" ;
    dcterms:isPartOf <https://docs.oasis-open-projects.org/oslc-op/sysml/v2.0/psd01/sysml-spec.html> ;
    dcterms:issued "2024-04-25"^^xsd:date ;
    dcterms:license <http://www.apache.org/licenses/LICENSE-2.0> ;
    dcterms:publisher <https://open-services.net/about/> ;
    dcterms:source <https://docs.oasis-open-projects.org/oslc-op/sysml/v2.0/psd01/sysml-shapes.ttl> ;
    dcterms:title "OSLC System Modeling Language (SysML) Version 2.0 Constraints" .

:AnnotatingElementShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:AnnotatingElement ;
    oslc:property :annotatingElement_AnnotatedElement,
        :annotatingElement_Annotation,
        :annotatingElement_OwnedAnnotatingRelationship,
        :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "An <code>AnnotatingElement</code> is an <code>Element</code> that provides additional description of or metadata on some other <code>Element</code>. An <code>AnnotatingElement</code> is either attached to its <code>annotatedElements</code> by <code>Annotation</code> <code>Relationships</code>, or it implicitly annotates its <code>owningNamespace</code>."^^rdf:XMLLiteral ;
    dcterms:title "AnnotatingElementShape"^^rdf:XMLLiteral .

:AnnotationShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Annotation ;
    oslc:property :annotation_AnnotatedElement,
        :annotation_AnnotatingElement,
        :annotation_OwningAnnotatedElement,
        :annotation_OwningAnnotatingElement,
        :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "An <code>Annotation</code> is a Relationship between an <code>AnnotatingElement</code> and the <code>Element</code> that is annotated by that <code>AnnotatingElement</code>."^^rdf:XMLLiteral ;
    dcterms:title "AnnotationShape"^^rdf:XMLLiteral .

:AssociationShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Association ;
    oslc:property :association_AssociationEnd,
        :association_RelatedType,
        :association_SourceType,
        :association_TargetType,
        :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "An <code>Association</code> is a <code>Relationship</code> and a <code>Classifier</code> to enable classification of links between things (in the universe). The co-domains (<code>types</code>) of the <code>associationEnd</code> <code>Features</code> are the <code>relatedTypes</code>, as co-domain and participants (linked things) of an <code>Association</code> identify each other."^^rdf:XMLLiteral ;
    dcterms:title "AssociationShape"^^rdf:XMLLiteral .

:AssociationStructureShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:AssociationStructure ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "An <code>AssociationStructure</code> is an <code>Association</code> that is also a <code>Structure</code>, classifying link objects that are both links and objects. As objects, link objects can be created and destroyed, and their non-end <code>Features</code> can change over time. However, the values of the end <code>Features</code> of a link object are fixed and cannot change over its lifetime."^^rdf:XMLLiteral ;
    dcterms:title "AssociationStructureShape"^^rdf:XMLLiteral .

:BehaviorShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Behavior ;
    oslc:property :behavior_Parameter,
        :behavior_Step,
        :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>Behavior </code>coordinates occurrences of other <code>Behaviors</code>, as well as changes in objects. <code>Behaviors</code> can be decomposed into <code>Steps</code> and be characterized by <code>parameters</code>."^^rdf:XMLLiteral ;
    dcterms:title "BehaviorShape"^^rdf:XMLLiteral .

:BindingConnectorShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:BindingConnector ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>BindingConnector</code> is a binary <code>Connector</code> that requires its <code>relatedFeatures</code> to identify the same things (have the same values)."^^rdf:XMLLiteral ;
    dcterms:title "BindingConnectorShape"^^rdf:XMLLiteral .

:BooleanExpressionShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:BooleanExpression ;
    oslc:property :booleanExpression_Predicate,
        :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>BooleanExpression</code> is a <em><code>Boolean</code></em>-valued <code>Expression</code> whose type is a <code>Predicate</code>. It represents a logical condition resulting from the evaluation of the <code>Predicate</code>."^^rdf:XMLLiteral ;
    dcterms:title "BooleanExpressionShape"^^rdf:XMLLiteral .

:ClassShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Class ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>Class</code> is a <code>Classifier</code> of things (in the universe) that can be distinguished without regard to how they are related to other things (via <code>Features</code>). This means multiple things classified by the same <code>Class</code> can be distinguished, even when they are related other things in exactly the same way."^^rdf:XMLLiteral ;
    dcterms:title "ClassShape"^^rdf:XMLLiteral .

:ClassifierShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Classifier ;
    oslc:property :classifier_OwnedSubclassification,
        :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>Classifier</code> is a <code>Type</code> that classifies:."^^rdf:XMLLiteral ;
    dcterms:title "ClassifierShape"^^rdf:XMLLiteral .

:CollectExpressionShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:CollectExpression ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>CollectExpression</code> is an <code>OperatorExpression</code> whose <code>operator</code> is <code>&quot;collect&quot;</code>, which resolves to the <code>Function</code> <em><code>ControlFunctions::collect</code></em> from the Kernel Functions Library."^^rdf:XMLLiteral ;
    dcterms:title "CollectExpressionShape"^^rdf:XMLLiteral .

:CommentShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Comment ;
    oslc:property :comment_Body,
        :comment_Locale,
        :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>Comment</code> is an <code>AnnotatingElement</code> whose <code>body</code> in some way describes its <code>annotatedElements</code>."^^rdf:XMLLiteral ;
    dcterms:title "CommentShape"^^rdf:XMLLiteral .

:ConjugationShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Conjugation ;
    oslc:property :conjugation_ConjugatedType,
        :conjugation_OriginalType,
        :conjugation_OwningType,
        :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "<code>Conjugation</code> is a <code>Relationship</code> between two types in which the <code>conjugatedType</code> inherits all the <code>Features</code> of the <code>originalType</code>, but with all <code>input</code> and <code>output</code> <code>Features</code> reversed. That is, any <code>Features</code> with a <code>direction</code> <em>in</em> relative to the <code>originalType</code> are considered to have an effective <code>direction</code> of <em>out</em> relative to the <code>conjugatedType</code> and, similarly, <code>Features</code> with <code>direction</code> <em>out</em> in the <code>originalType</code> are considered to have an effective <code>direction</code> of <em>in</em> in the <code>conjugatedType</code>. <code>Features</code> with <code>direction</code> <em>inout</em>, or with no <code>direction</code>, in the <code>originalType</code>, are inherited without change."^^rdf:XMLLiteral ;
    dcterms:title "ConjugationShape"^^rdf:XMLLiteral .

:ConnectorShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Connector ;
    oslc:property :connector_Association,
        :connector_ConnectorEnd,
        :connector_RelatedFeature,
        :connector_SourceFeature,
        :connector_TargetFeature,
        :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>Connector</code> is a usage of <code>Associations</code>, with links restricted according to instances of the <code>Type</code> in which they are used (domain of the <code>Connector</code>). The <code>associations</code> of the <code>Connector</code> restrict what kinds of things might be linked. The <code>Connector</code> further restricts these links to be between values of <code>Features</code> on instances of its domain."^^rdf:XMLLiteral ;
    dcterms:title "ConnectorShape"^^rdf:XMLLiteral .

:DataTypeShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:DataType ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>DataType</code> is a <code>Classifier</code> of things (in the universe) that can only be distinguished by how they are related to other things (via Features). This means multiple things classified by the same <code>DataType</code>."^^rdf:XMLLiteral ;
    dcterms:title "DataTypeShape"^^rdf:XMLLiteral .

:DependencyShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Dependency ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :dependency_Client,
        :dependency_Supplier,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>Dependency</code> is a <code>Relationship</code> that indicates that one or more <code>client</code> <code>Elements</code> require one more <code>supplier</code> <code>Elements</code> for their complete specification. In general, this means that a change to one of the <code>supplier</code> <code>Elements</code> may necessitate a change to, or re-specification of, the <code>client</code> <code>Elements</code>."^^rdf:XMLLiteral ;
    dcterms:title "DependencyShape"^^rdf:XMLLiteral .

:DifferencingShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Differencing ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :differencing_DifferencingType,
        :differencing_TypeDifferenced,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "<code>Differencing</code> is a <code>Relationship</code> that makes its <code>differencingType</code> one of the <code>differencingTypes</code> of its <code>typeDifferenced</code>."^^rdf:XMLLiteral ;
    dcterms:title "DifferencingShape"^^rdf:XMLLiteral .

:DisjoiningShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Disjoining ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :disjoining_DisjoiningType,
        :disjoining_OwningType,
        :disjoining_TypeDisjoined,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>Disjoining</code> is a <code>Relationship</code> between <code>Types</code> asserted to have interpretations that are not shared (disjoint) between them, identified as <code>typeDisjoined</code> and <code>disjoiningType</code>. For example, a <code>Classifier</code> for mammals is disjoint from a <code>Classifier</code> for minerals, and a <code>Feature</code> for people's parents is disjoint from a <code>Feature</code> for their children."^^rdf:XMLLiteral ;
    dcterms:title "DisjoiningShape"^^rdf:XMLLiteral .

:DocumentationShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Documentation ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :documentation_DocumentedElement,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "<code>Documentation</code> is a <code>Comment</code> that specifically documents a <code>documentedElement</code>, which must be its <code>owner</code>."^^rdf:XMLLiteral ;
    dcterms:title "DocumentationShape"^^rdf:XMLLiteral .

:ElementFilterMembershipShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:ElementFilterMembership ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :elementFilterMembership_Condition,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "<code>ElementFilterMembership</code> is a <code>Membership</code> between a <code>Namespace</code> and a model-level evaluable <code><em>Boolean</em></code>-valued <code>Expression</code>, asserting that imported <code>members</code> of the <code>Namespace</code> should be filtered using the <code>condition</code> <code>Expression</code>. A general <code>Namespace</code> does not define any specific filtering behavior, but such behavior may be defined for various specialized kinds of <code>Namespaces</code>."^^rdf:XMLLiteral ;
    dcterms:title "ElementFilterMembershipShape"^^rdf:XMLLiteral .

:ElementShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Element ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :element_AliasIds,
        :element_DeclaredName,
        :element_DeclaredShortName,
        :element_Documentation,
        :element_ElementId,
        :element_IsImpliedIncluded,
        :element_IsLibraryElement,
        :element_Name,
        :element_OwnedAnnotation,
        :element_OwnedElement,
        :element_OwnedRelationship,
        :element_Owner,
        :element_OwningMembership,
        :element_OwningNamespace,
        :element_OwningRelationship,
        :element_QualifiedName,
        :element_ShortName,
        :element_TextualRepresentation,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "An <code>Element</code> is a constituent of a model that is uniquely identified relative to all other <code>Elements</code>. It can have <code>Relationships</code> with other <code>Elements</code>. Some of these <code>Relationships</code> might imply ownership of other <code>Elements</code>, which means that if an <code>Element</code> is deleted from a model, then so are all the <code>Elements</code> that it owns."^^rdf:XMLLiteral ;
    dcterms:title "ElementShape"^^rdf:XMLLiteral .

:EndFeatureMembershipShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:EndFeatureMembership ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "<code>EndFeatureMembership</code> is a <code>FeatureMembership</code> that requires its <code>memberFeature</code> be owned and have <code>isEnd = true</code>."^^rdf:XMLLiteral ;
    dcterms:title "EndFeatureMembershipShape"^^rdf:XMLLiteral .

:ExpressionShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Expression ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :expression_Function,
        :expression_IsModelLevelEvaluable,
        :expression_Result,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "An <code>Expression</code> is a <code>Step</code> that is typed by a <code>Function</code>. An <code>Expression</code> that also has a <code>Function</code> as its <code>featuringType</code> is a computational step within that <code>Function</code>. An <code>Expression</code> always has a single <code>result</code> parameter, which redefines the <code>result</code> parameter of its defining <code>function</code>. This allows <code>Expressions</code> to be interconnected in tree structures, in which inputs to each <code>Expression</code> in the tree are determined as the results of other <code>Expression</code> in the tree."^^rdf:XMLLiteral ;
    dcterms:title "ExpressionShape"^^rdf:XMLLiteral .

:FeatureChainExpressionShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:FeatureChainExpression ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :featureChainExpression_TargetFeature,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>FeatureChainExpression</code> is an <code>OperatorExpression</code> whose operator is <code>&quot;.&quot;</code>, which resolves to the <code>Function</code> <em><code>ControlFunctions::'.'</code></em> from the Kernel Functions Library. It evaluates to the result of chaining the <code>result</code> <code>Feature</code> of its single <code>argument</code> <code>Expression</code> with its <code>targetFeature</code>."^^rdf:XMLLiteral ;
    dcterms:title "FeatureChainExpressionShape"^^rdf:XMLLiteral .

:FeatureChainingShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:FeatureChaining ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :featureChaining_ChainingFeature,
        :featureChaining_FeatureChained,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "<code>FeatureChaining</code> is a <code>Relationship</code> that makes its target <code>Feature</code> one of the <code>chainingFeatures</code> of its owning <code>Feature</code>."^^rdf:XMLLiteral ;
    dcterms:title "FeatureChainingShape"^^rdf:XMLLiteral .

:FeatureInvertingShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:FeatureInverting ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :featureInverting_FeatureInverted,
        :featureInverting_InvertingFeature,
        :featureInverting_OwningFeature,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>FeatureInverting</code> is a <code>Relationship</code> between <code>Features</code> asserting that their interpretations (sequences) are the reverse of each other, identified as <code>featureInverted</code> and <code>invertingFeature</code>. For example, a <code>Feature</code> identifying each person's parents is the inverse of a <code>Feature</code> identifying each person's children. A person identified as a parent of another will identify that other as one of their children."^^rdf:XMLLiteral ;
    dcterms:title "FeatureInvertingShape"^^rdf:XMLLiteral .

:FeatureMembershipShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:FeatureMembership ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :featureMembership_OwnedMemberFeature,
        :featureMembership_OwningType,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>FeatureMembership</code> is an <code>OwningMembership</code> between a <code>Feature</code> in an <code>owningType</code> that is also a <code>Featuring</code> <code>Relationship</code> between the <code>Feature</code> and the <code>Type</code>, in which the <code>featuringType</code> is the <code>source</code> and the <code>featureOfType</code> is the <code>target</code>. A <code>FeatureMembership</code> is always owned by its <code>owningType</code>, which is the <code>featuringType</code> for the <code>FeatureMembership</code> considered as a <code>Featuring</code>."^^rdf:XMLLiteral ;
    dcterms:title "FeatureMembershipShape"^^rdf:XMLLiteral .

:FeatureReferenceExpressionShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:FeatureReferenceExpression ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :featureReferenceExpression_Referent,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>FeatureReferenceExpression</code> is an <code>Expression</code> whose <code>result</code> is bound to a <code>referent</code> <code>Feature</code>."^^rdf:XMLLiteral ;
    dcterms:title "FeatureReferenceExpressionShape"^^rdf:XMLLiteral .

:FeatureShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Feature ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :feature_ChainingFeature,
        :feature_Direction,
        :feature_EndOwningType,
        :feature_FeaturingType,
        :feature_IsComposite,
        :feature_IsDerived,
        :feature_IsEnd,
        :feature_IsOrdered,
        :feature_IsPortion,
        :feature_IsReadOnly,
        :feature_IsUnique,
        :feature_OwnedFeatureChaining,
        :feature_OwnedFeatureInverting,
        :feature_OwnedRedefinition,
        :feature_OwnedReferenceSubsetting,
        :feature_OwnedSubsetting,
        :feature_OwnedTypeFeaturing,
        :feature_OwnedTyping,
        :feature_OwningFeatureMembership,
        :feature_OwningType,
        :feature_Type,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description """A <code>Feature</code> is a <code>Type</code> that classifies relations between multiple things (in the universe). The domain of the relation is the intersection of the <code>featuringTypes</code> of the <code>Feature</code>. (The domain of a <code>Feature</code> with no <code>featuringTyps</code> is implicitly the most general <code>Type</code> <em><code>Base::Anything</code></em> from the Kernel Semantic Library.) The co-domain of the relation is the intersection of the <code>types</code> of the <code>Feature</code>.

."""^^rdf:XMLLiteral ;
    dcterms:title "FeatureShape"^^rdf:XMLLiteral .

:FeatureTypingShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:FeatureTyping ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :featureTyping_OwningFeature,
        :featureTyping_Type,
        :featureTyping_TypedFeature,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "<code>FeatureTyping</code> is <code>Specialization</code> in which the <code>specific</code> <code>Type</code> is a <code>Feature</code>. This means the set of instances of the (specific) <code>typedFeature</code> is a subset of the set of instances of the (general) <code>type</code>. In the simplest case, the <code>type</code> is a <code>Classifier</code>, whereupon the <code>typedFeature</code> has values that are instances of the <code>Classifier</code>."^^rdf:XMLLiteral ;
    dcterms:title "FeatureTypingShape"^^rdf:XMLLiteral .

:FeatureValueShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:FeatureValue ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :featureValue_FeatureWithValue,
        :featureValue_IsDefault,
        :featureValue_IsInitial,
        :featureValue_Value,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>FeatureValue</code> is a <code>Membership</code> that identifies a particular member <code>Expression</code> that provides the value of the <code>Feature</code> that owns the <code>FeatureValue</code>. The value is specified as either a bound value or an initial value, and as either a concrete or default value. A <code>Feature</code> can have at most one <code>FeatureValue</code>."^^rdf:XMLLiteral ;
    dcterms:title "FeatureValueShape"^^rdf:XMLLiteral .

:FeaturingShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Featuring ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :featuring_Feature,
        :featuring_Type,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "<code>Featuring</code> is a <code>Relationship</code> between a <code>Type</code> and a <code>Feature</code> that is featured by that <code>Type</code>. It asserts that every instance in the domain of the <code>feature</code> must be classified by the <code>type</code>."^^rdf:XMLLiteral ;
    dcterms:title "FeaturingShape"^^rdf:XMLLiteral .

:FunctionShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Function ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :function_Expression,
        :function_IsModelLevelEvaluable,
        :function_Result,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>Function</code> is a <code>Behavior</code> that has an <code>out</code> <code>parameter</code> that is identified as its <code>result</code>. A <code>Function</code> represents the performance of a calculation that produces the values of its <code>result</code> <code>parameter</code>. This calculation may be decomposed into <code>Expressions</code> that are <code>steps</code> of the <code>Function</code>."^^rdf:XMLLiteral ;
    dcterms:title "FunctionShape"^^rdf:XMLLiteral .

:ImportShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Import ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :import_ImportOwningNamespace,
        :import_ImportedElement,
        :import_IsImportAll,
        :import_IsRecursive,
        :import_Visibility,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "An <code>Import</code> is an <code>Relationship</code> between its <code>importOwningNamespace</code> and either a <code>Membership</code> (for a <code>MembershipImport</code>) or another <code>Namespace</code> (for a <code>NamespaceImport</code>), which determines a set of <code>Memberships</code> that become <code>importedMemberships</code> of the <code>importOwningNamespace</code>. If <code>isImportAll = false</code> (the default), then only public <code>Memberships</code> are considered &quot;visible&quot;. If <code>isImportAll = true</code>, then all <code>Memberships</code> are considered &quot;visible&quot;, regardless of their declared <code>visibility</code>. If <code>isRecursive = true</code>, then visible <code>Memberships</code> are also recursively imported from owned sub-<code>Namespaces</code>."^^rdf:XMLLiteral ;
    dcterms:title "ImportShape"^^rdf:XMLLiteral .

:InteractionShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Interaction ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "An <code>Interaction</code> is a <code>Behavior</code> that is also an <code>Association</code>, providing a context for multiple objects that have behaviors that impact one another."^^rdf:XMLLiteral ;
    dcterms:title "InteractionShape"^^rdf:XMLLiteral .

:IntersectingShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Intersecting ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :intersecting_IntersectingType,
        :intersecting_TypeIntersected,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "<code>Intersecting</code> is a <code>Relationship</code> that makes its <code>intersectingType</code> one of the <code>intersectingTypes</code> of its <code>typeIntersected</code>."^^rdf:XMLLiteral ;
    dcterms:title "IntersectingShape"^^rdf:XMLLiteral .

:InvariantShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Invariant ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :invariant_IsNegated,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "An <code>Invariant</code> is a <code>BooleanExpression</code> that is asserted to have a specific <code><em>Boolean</em></code> result value. If <code>isNegated = false</code>, then the result is asserted to be true. If <code>isNegated = true</code>, then the result is asserted to be false."^^rdf:XMLLiteral ;
    dcterms:title "InvariantShape"^^rdf:XMLLiteral .

:InvocationExpressionShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:InvocationExpression ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :invocationExpression_Argument,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "An <code>InvocationExpression</code> is an <code>Expression</code> each of whose input <code>parameters</code> are bound to the <code>result</code> of an <code>argument</code> Expression."^^rdf:XMLLiteral ;
    dcterms:title "InvocationExpressionShape"^^rdf:XMLLiteral .

:ItemFeatureShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:ItemFeature ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "An <code>ItemFeature</code> is the <code>ownedFeature</code> of an <code>ItemFlow</code> that identifies the things carried by the kinds of transfers that are instances of the <code>ItemFlow</code>."^^rdf:XMLLiteral ;
    dcterms:title "ItemFeatureShape"^^rdf:XMLLiteral .

:ItemFlowEndShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:ItemFlowEnd ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "An <code>ItemFlowEnd</code> is a <code>Feature</code> that is one of the <code>connectorEnds</code> giving the <code><em>source</em></code> or <code><em>target</em></code> of an <code>ItemFlow</code>. For <code>ItemFlows</code> typed by <code><em>FlowTransfer</em></code> or its specializations, <code>ItemFlowEnds</code> must have exactly one <code>ownedFeature</code>, which redefines <code><em>Transfer::source::sourceOutput</em></code> or <code><em>Transfer::target::targetInput</em></code> and redefines the corresponding feature of the <code>relatedElement</code> for its end."^^rdf:XMLLiteral ;
    dcterms:title "ItemFlowEndShape"^^rdf:XMLLiteral .

:ItemFlowShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:ItemFlow ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :itemFlow_Interaction,
        :itemFlow_ItemFeature,
        :itemFlow_ItemFlowEnd,
        :itemFlow_ItemType,
        :itemFlow_SourceOutputFeature,
        :itemFlow_TargetInputFeature,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "An <code>ItemFlow</code> is a <code>Step</code> that represents the transfer of objects or data values from one <code>Feature</code> to another. <code>ItemFlows</code> can take non-zero time to complete."^^rdf:XMLLiteral ;
    dcterms:title "ItemFlowShape"^^rdf:XMLLiteral .

:LibraryPackageShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:LibraryPackage ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :libraryPackage_IsStandard,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>LibraryPackage</code> is a <code>Package</code> that is the container for a model library. A <code>LibraryPackage</code> is itself a library <code>Element</code> as are all <code>Elements</code> that are directly or indirectly contained in it."^^rdf:XMLLiteral ;
    dcterms:title "LibraryPackageShape"^^rdf:XMLLiteral .

:LiteralBooleanShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:LiteralBoolean ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :literalBoolean_Value,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "<code>LiteralBoolean</code> is a <code>LiteralExpression</code> that provides a <code><em>Boolean</em></code> value as a result. Its <code>result</code> <code>parameter</code> must have type <code><em>Boolean</em></code>."^^rdf:XMLLiteral ;
    dcterms:title "LiteralBooleanShape"^^rdf:XMLLiteral .

:LiteralExpressionShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:LiteralExpression ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>LiteralExpression</code> is an <code>Expression</code> that provides a basic <code><em>DataValue</em></code> as a result."^^rdf:XMLLiteral ;
    dcterms:title "LiteralExpressionShape"^^rdf:XMLLiteral .

:LiteralInfinityShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:LiteralInfinity ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>LiteralInfinity</code> is a <code>LiteralExpression</code> that provides the positive infinity value (<code>*</code>). It's <code>result</code> must have the type <code><em>Positive</em></code>."^^rdf:XMLLiteral ;
    dcterms:title "LiteralInfinityShape"^^rdf:XMLLiteral .

:LiteralIntegerShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:LiteralInteger ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :literalInteger_Value,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>LiteralInteger</code> is a <code>LiteralExpression</code> that provides an <code><em>Integer</em></code> value as a result. Its <code>result</code> <code>parameter</code> must have the type <code><em>Integer</em></code>."^^rdf:XMLLiteral ;
    dcterms:title "LiteralIntegerShape"^^rdf:XMLLiteral .

:LiteralRationalShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:LiteralRational ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :literalRational_Value,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>LiteralRational</code> is a <code>LiteralExpression</code> that provides a <code><em>Rational</em></code> value as a result. Its <code>result</code> <code>parameter</code> must have the type <code><em>Rational</em></code>."^^rdf:XMLLiteral ;
    dcterms:title "LiteralRationalShape"^^rdf:XMLLiteral .

:LiteralStringShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:LiteralString ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :literalString_Value,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>LiteralString</code> is a <code>LiteralExpression</code> that provides a <code><em>String</em></code> value as a result. Its <code>result</code> <code>parameter</code> must have the type <code><em>String</em></code>."^^rdf:XMLLiteral ;
    dcterms:title "LiteralStringShape"^^rdf:XMLLiteral .

:MembershipImportShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:MembershipImport ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :membershipImport_ImportedMembership,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>MembershipImport</code> is an <code>Import</code> that imports its <code>importedMembership</code> into the <code>importOwningNamespace</code>. If <code>isRecursive = true</code> and the <code>memberElement</code> of the <code>importedMembership</code> is a <code>Namespace</code>, then the equivalent of a recursive <code>NamespaceImport</code> is also performed on that <code>Namespace</code>."^^rdf:XMLLiteral ;
    dcterms:title "MembershipImportShape"^^rdf:XMLLiteral .

:MembershipShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Membership ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :membership_MemberElement,
        :membership_MemberElementId,
        :membership_MemberName,
        :membership_MemberShortName,
        :membership_MembershipOwningNamespace,
        :membership_Visibility,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>Membership</code> is a <code>Relationship</code> between a <code>Namespace</code> and an <code>Element</code> that indicates the <code>Element</code> is a <code>member</code> of (i.e., is contained in) the Namespace. Any <code>memberNames</code> specify how the <code>memberElement</code> is identified in the <code>Namespace</code> and the <code>visibility</code> specifies whether or not the <code>memberElement</code> is publicly visible from outside the <code>Namespace</code>."^^rdf:XMLLiteral ;
    dcterms:title "MembershipShape"^^rdf:XMLLiteral .

:MetaclassShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Metaclass ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>Metaclass</code> is a <code>Structure</code> used to type <code>MetadataFeatures</code>."^^rdf:XMLLiteral ;
    dcterms:title "MetaclassShape"^^rdf:XMLLiteral .

:MetadataAccessExpressionShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:MetadataAccessExpression ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :metadataAccessExpression_ReferencedElement,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>MetadataAccessExpression</code> is an <code>Expression</code> whose <code>result</code> is a sequence of instances of <code>Metaclasses</code> representing all the <code>MetadataFeature</code> annotations of the <code>referencedElement</code>. In addition, the sequence includes an instance of the reflective <code>Metaclass</code> corresponding to the MOF class of the <code>referencedElement</code>, with values for all the abstract syntax properties of the <code>referencedElement</code>."^^rdf:XMLLiteral ;
    dcterms:title "MetadataAccessExpressionShape"^^rdf:XMLLiteral .

:MetadataFeatureShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:MetadataFeature ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :metadataFeature_Metaclass,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>MetadataFeature</code> is a <code>Feature</code> that is an <code>AnnotatingElement</code> used to annotate another <code>Element</code> with metadata. It is typed by a <code>Metaclass</code>. All its <code>ownedFeatures</code> must redefine <code>features</code> of its <code>metaclass</code> and any feature bindings must be model-level evaluable."^^rdf:XMLLiteral ;
    dcterms:title "MetadataFeatureShape"^^rdf:XMLLiteral .

:MultiplicityRangeShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:MultiplicityRange ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :multiplicityRange_Bound,
        :multiplicityRange_LowerBound,
        :multiplicityRange_UpperBound,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>MultiplicityRange</code> is a <code>Multiplicity</code> whose value is defined to be the (inclusive) range of natural numbers given by the result of a <code>lowerBound</code> <code>Expression</code> and the result of an <code>upperBound</code> <code>Expression</code>. The result of these <code>Expressions</code> shall be of type <code><em>Natural</em></code>. If the result of the <code>upperBound</code> <code>Expression</code> is the unbounded value <code>*</code>, then the specified range includes all natural numbers greater than or equal to the <code>lowerBound</code> value. If no <code>lowerBound</code> <code>Expression</code>, then the default is that the lower bound has the same value as the upper bound, except if the <code>upperBound</code> evaluates to <code>*</code>, in which case the default for the lower bound is 0."^^rdf:XMLLiteral ;
    dcterms:title "MultiplicityRangeShape"^^rdf:XMLLiteral .

:MultiplicityShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Multiplicity ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description """A <code>Multiplicity</code> is a <code>Feature</code> whose co-domain is a set of natural numbers giving the allowed cardinalities of each <code>typeWithMultiplicity</code>. The <em>cardinality</em> of a <code>Type</code> is defined as follows, depending on whether the <code>Type</code> is a <code>Classifier</code> or <code>Feature</code>.
."""^^rdf:XMLLiteral ;
    dcterms:title "MultiplicityShape"^^rdf:XMLLiteral .

:NamespaceImportShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:NamespaceImport ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :namespaceImport_ImportedNamespace,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>NamespaceImport</code> is an Import that imports <code>Memberships</code> from its <code>importedNamespace</code> into the <code>importOwningNamespace</code>. If <code> isRecursive = false</code>, then only the visible <code>Memberships</code> of the <code>importedNamespace</code> are imported. If <code> isRecursive = true</code>, then, in addition, <code>Memberships</code> are recursively imported from any <code>ownedMembers</code> of the <code>importedNamespace</code> that are <code>Namespaces</code>."^^rdf:XMLLiteral ;
    dcterms:title "NamespaceImportShape"^^rdf:XMLLiteral .

:NamespaceShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Namespace ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :namespace_ImportedMembership,
        :namespace_Member,
        :namespace_Membership,
        :namespace_OwnedImport,
        :namespace_OwnedMember,
        :namespace_OwnedMembership,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>Namespace</code> is an <code>Element</code> that contains other <code>Elements</code>, known as its <code>members</code>, via <code>Membership</code> <code>Relationships</code> with those <code>Elements</code>. The <code>members</code> of a <code>Namespace</code> may be owned by the <code>Namespace</code>, aliased in the <code>Namespace</code>, or imported into the <code>Namespace</code> via <code>Import</code> <code>Relationships</code>."^^rdf:XMLLiteral ;
    dcterms:title "NamespaceShape"^^rdf:XMLLiteral .

:NullExpressionShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:NullExpression ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>NullExpression</code> is an <code>Expression</code> that results in a null value."^^rdf:XMLLiteral ;
    dcterms:title "NullExpressionShape"^^rdf:XMLLiteral .

:OperatorExpressionShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:OperatorExpression ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :operatorExpression_Operator,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "An <code>OperatorExpression</code> is an <code>InvocationExpression</code> whose <code>function</code> is determined by resolving its <code>operator</code> in the context of one of the standard packages from the Kernel Function Library."^^rdf:XMLLiteral ;
    dcterms:title "OperatorExpressionShape"^^rdf:XMLLiteral .

:OwningMembershipShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:OwningMembership ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :owningMembership_OwnedMemberElement,
        :owningMembership_OwnedMemberElementId,
        :owningMembership_OwnedMemberName,
        :owningMembership_OwnedMemberShortName,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "An <code>OwningMembership</code> is a <code>Membership</code> that owns its <code>memberElement</code> as a <code>ownedRelatedElement</code>. The <code>ownedMemberElement</code> becomes an <code>ownedMember</code> of the <code>membershipOwningNamespace</code>."^^rdf:XMLLiteral ;
    dcterms:title "OwningMembershipShape"^^rdf:XMLLiteral .

:PackageShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Package ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :package_FilterCondition,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>Package</code> is a <code>Namespace</code> used to group <code>Elements</code>, without any instance-level semantics. It may have one or more model-level evaluable <code>filterCondition</code> <code>Expressions</code> used to filter its <code>importedMemberships</code>. Any imported <code>member</code> must meet all of the <code>filterConditions</code>."^^rdf:XMLLiteral ;
    dcterms:title "PackageShape"^^rdf:XMLLiteral .

:ParameterMembershipShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:ParameterMembership ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :parameterMembership_OwnedMemberParameter,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>ParameterMembership</code> is a <code>FeatureMembership</code> that identifies its <code>memberFeature</code> as a parameter, which is always owned, and must have a <code>direction</code>. A <code>ParameterMembership</code> must be owned by a <code>Behavior</code> or a <code>Step</code>."^^rdf:XMLLiteral ;
    dcterms:title "ParameterMembershipShape"^^rdf:XMLLiteral .

:PredicateShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Predicate ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>Predicate</code> is a <code>Function</code> whose <code>result</code> <code>parameter</code> has type <code><em>Boolean</em></code> and multiplicity <code>1..1</code>."^^rdf:XMLLiteral ;
    dcterms:title "PredicateShape"^^rdf:XMLLiteral .

:RedefinitionShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Redefinition ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :redefinition_RedefinedFeature,
        :redefinition_RedefiningFeature,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "<code>Redefinition</code> is a kind of <code>Subsetting</code> that requires the <code>redefinedFeature</code> and the <code>redefiningFeature</code> to have the same values (on each instance of the domain of the <code>redefiningFeature</code>). This means any restrictions on the <code>redefiningFeature</code>, such as <code>type</code> or <code>multiplicity</code>, also apply to the <code>redefinedFeature</code> (on each instance of the domain of the <code>redefiningFeature</code>), and vice versa. The <code>redefinedFeature</code> might have values for instances of the domain of the <code>redefiningFeature</code>, but only as instances of the domain of the <code>redefinedFeature</code> that happen to also be instances of the domain of the <code>redefiningFeature</code>. This is supported by the constraints inherited from <code>Subsetting</code> on the domains of the <code>redefiningFeature</code> and <code>redefinedFeature</code>. However, these constraints are narrowed for <code>Redefinition</code> to require the <code>owningTypes</code> of the <code>redefiningFeature</code> and <code>redefinedFeature</code> to be different and the <code>redefinedFeature</code> to not be inherited into the <code>owningNamespace</code> of the <code>redefiningFeature</code>.This enables the <code>redefiningFeature</code> to have the same name as the <code>redefinedFeature</code>, if desired."^^rdf:XMLLiteral ;
    dcterms:title "RedefinitionShape"^^rdf:XMLLiteral .

:ReferenceSubsettingShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:ReferenceSubsetting ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :referenceSubsetting_ReferencedFeature,
        :referenceSubsetting_ReferencingFeature,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "<code>ReferenceSubsetting</code> is a kind of <code>Subsetting</code> in which the <code>referencedFeature</code> is syntactically distinguished from other <code>Features</code> subsetted by the <code>referencingFeature</code>. <code>ReferenceSubsetting</code> has the same semantics as <code>Subsetting</code>, but the <code>referenceFeature</code> may have a special purpose relative to the <code>referencingFeature</code>. For instance, <code>ReferenceSubsetting</code> is used to identify the <code>relatedFeatures</code> of a <code>Connector</code>."^^rdf:XMLLiteral ;
    dcterms:title "ReferenceSubsettingShape"^^rdf:XMLLiteral .

:RelationshipShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Relationship ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :relationship_IsImplied,
        :relationship_OwnedRelatedElement,
        :relationship_OwningRelatedElement,
        :relationship_RelatedElement,
        :relationship_Source,
        :relationship_Target,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>Relationship</code> is an <code>Element</code> that relates other <code>Element</code>. Some of its <code>relatedElements</code> may be owned, in which case those <code>ownedRelatedElements</code> will be deleted from a model if their <code>owningRelationship</code> is. A <code>Relationship</code> may also be owned by another <code>Element</code>, in which case the <code>ownedRelatedElements</code> of the <code>Relationship</code> are also considered to be transitively owned by the <code>owningRelatedElement</code> of the <code>Relationship</code>."^^rdf:XMLLiteral ;
    dcterms:title "RelationshipShape"^^rdf:XMLLiteral .

:ResultExpressionMembershipShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:ResultExpressionMembership ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :resultExpressionMembership_OwnedResultExpression,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>ResultExpressionMembership</code> is a <code>FeatureMembership</code> that indicates that the <code>ownedResultExpression</code> provides the result values for the <code>Function</code> or <code>Expression</code> that owns it. The owning <code>Function</code> or <code>Expression</code> must contain a <code>BindingConnector</code> between the <code>result</code> <code>parameter</code> of the <code>ownedResultExpression</code> and the <code>result</code> <code>parameter</code> of the owning <code>Function</code> or <code>Expression</code>."^^rdf:XMLLiteral ;
    dcterms:title "ResultExpressionMembershipShape"^^rdf:XMLLiteral .

:ReturnParameterMembershipShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:ReturnParameterMembership ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>ReturnParameterMembership</code> is a <code>ParameterMembership</code> that indicates that the <code>ownedMemberParameter</code> is the <code>result</code> <code>parameter</code> of a <code>Function</code> or <code>Expression</code>. The <code>direction</code> of the <code>ownedMemberParameter</code> must be <code>out</code>."^^rdf:XMLLiteral ;
    dcterms:title "ReturnParameterMembershipShape"^^rdf:XMLLiteral .

:SelectExpressionShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:SelectExpression ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>SelectExpression</code> is an <code>OperatorExpression</code> whose operator is <code>&quot;select&quot;</code>, which resolves to the <code>Function</code> <em><code>ControlFunctions::select</code></em> from the Kernel Functions Library."^^rdf:XMLLiteral ;
    dcterms:title "SelectExpressionShape"^^rdf:XMLLiteral .

:SpecializationShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Specialization ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :specialization_General,
        :specialization_OwningType,
        :specialization_Specific,
        :title,
        :trace,
        :type ;
    dcterms:description "<code>Specialization</code> is a <code>Relationship</code> between two <code>Types</code> that requires all instances of the <code>specific</code> type to also be instances of the <code>general</code> Type (i.e., the set of instances of the <code>specific</code> Type is a <em>subset</em> of those of the <code>general</code> Type, which might be the same set)."^^rdf:XMLLiteral ;
    dcterms:title "SpecializationShape"^^rdf:XMLLiteral .

:StepShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Step ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :step_Behavior,
        :step_Parameter,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>Step</code> is a <code>Feature</code> that is typed by one or more <code>Behaviors</code>. <code>Steps</code> may be used by one <code>Behavior</code> to coordinate the performance of other <code>Behaviors</code>, supporting a steady refinement of behavioral descriptions. <code>Steps</code> can be ordered in time and can be connected using <code>ItemFlows</code> to specify things flowing between their <code>parameters</code>."^^rdf:XMLLiteral ;
    dcterms:title "StepShape"^^rdf:XMLLiteral .

:StructureShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Structure ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>Structure</code> is a <code>Class</code> of objects in the modeled universe that are primarily structural in nature. While such an object is not itself behavioral, it may be involved in and acted on by <code>Behaviors</code>, and it may be the performer of some of them."^^rdf:XMLLiteral ;
    dcterms:title "StructureShape"^^rdf:XMLLiteral .

:SubclassificationShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Subclassification ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :subclassification_OwningClassifier,
        :subclassification_Subclassifier,
        :subclassification_Superclassifier,
        :title,
        :trace,
        :type ;
    dcterms:description "<code>Subclassification</code> is <code>Specialization</code> in which both the <code>specific</code> and <code>general</code> <code>Types</code> are <code>Classifier</code>. This means all instances of the specific <code>Classifier</code> are also instances of the general <code>Classifier</code>."^^rdf:XMLLiteral ;
    dcterms:title "SubclassificationShape"^^rdf:XMLLiteral .

:SubsettingShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Subsetting ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :subsetting_OwningFeature,
        :subsetting_SubsettedFeature,
        :subsetting_SubsettingFeature,
        :title,
        :trace,
        :type ;
    dcterms:description "<code>Subsetting</code> is <code>Specialization</code> in which the <code>specific</code> and <code>general</code> <code>Types</code> are <code>Features</code>. This means all values of the <code>subsettingFeature</code> (on instances of its domain, i.e., the intersection of its <code>featuringTypes</code>) are values of the <code>subsettedFeature</code> on instances of its domain. To support this the domain of the <code>subsettingFeature</code> must be the same or specialize (at least indirectly) the domain of the <code>subsettedFeature</code> (via <code>Specialization</code>), and the co-domain (intersection of the <code>types</code>) of the <code>subsettingFeature</code> must specialize the co-domain of the <code>subsettedFeature</code>."^^rdf:XMLLiteral ;
    dcterms:title "SubsettingShape"^^rdf:XMLLiteral .

:SuccessionItemFlowShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:SuccessionItemFlow ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>SuccessionItemFlow</code> is an <code>ItemFlow</code> that also provides temporal ordering. It classifies <code><em>Transfers</em></code> that cannot start until the source <code><em>Occurrence</em></code> has completed and that must complete before the target <code><em>Occurrence</em></code> can start."^^rdf:XMLLiteral ;
    dcterms:title "SuccessionItemFlowShape"^^rdf:XMLLiteral .

:SuccessionShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Succession ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :succession_EffectStep,
        :succession_GuardExpression,
        :succession_TransitionStep,
        :succession_TriggerStep,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>Succession</code> is a binary <code>Connector</code> that requires its <code>relatedFeatures</code> to happen separately in time."^^rdf:XMLLiteral ;
    dcterms:title "SuccessionShape"^^rdf:XMLLiteral .

:TextualRepresentationShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:TextualRepresentation ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :textualRepresentation_Body,
        :textualRepresentation_Language,
        :textualRepresentation_RepresentedElement,
        :title,
        :trace,
        :type ;
    dcterms:description "A <code>TextualRepresentation</code> is an <code>AnnotatingElement</code> whose <code>body</code> represents the <code>representedElement</code> in a given <code>language</code>. The <code>representedElement</code> must be the <code>owner</code> of the <code>TextualRepresentation</code>. The named <code>language</code> can be a natural language, in which case the <code>body</code> is an informal representation, or an artificial language, in which case the <code>body</code> is expected to be a formal, machine-parsable representation."^^rdf:XMLLiteral ;
    dcterms:title "TextualRepresentationShape"^^rdf:XMLLiteral .

:TypeFeaturingShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:TypeFeaturing ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type,
        :typeFeaturing_FeatureOfType,
        :typeFeaturing_FeaturingType,
        :typeFeaturing_OwningFeatureOfType ;
    dcterms:description "A <code>TypeFeaturing</code> is a <code>Featuring</code> <code>Relationship</code> in which the <code>featureOfType</code> is the <code>source</code> and the <code>featuringType</code> is the <code>target</code>."^^rdf:XMLLiteral ;
    dcterms:title "TypeFeaturingShape"^^rdf:XMLLiteral .

:TypeShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Type ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type,
        :type_DifferencingType,
        :type_DirectedFeature,
        :type_EndFeature,
        :type_Feature,
        :type_FeatureMembership,
        :type_InheritedFeature,
        :type_InheritedMembership,
        :type_Input,
        :type_IntersectingType,
        :type_IsAbstract,
        :type_IsConjugated,
        :type_IsSufficient,
        :type_Multiplicity,
        :type_Output,
        :type_OwnedConjugator,
        :type_OwnedDifferencing,
        :type_OwnedDisjoining,
        :type_OwnedEndFeature,
        :type_OwnedFeature,
        :type_OwnedFeatureMembership,
        :type_OwnedIntersecting,
        :type_OwnedSpecialization,
        :type_OwnedUnioning,
        :type_UnioningType ;
    dcterms:description "A <code>Type</code> is a <code>Namespace</code> that is the most general kind of <code>Element</code> supporting the semantics of classification. A <code>Type</code> may be a <code>Classifier</code> or a <code>Feature</code>, defining conditions on what is classified by the <code>Type</code> (see also the description of <code>isSufficient</code>)."^^rdf:XMLLiteral ;
    dcterms:title "TypeShape"^^rdf:XMLLiteral .

:UnioningShape a oslc:ResourceShape ;
    oslc:describes oslc_kerml:Unioning ;
    oslc:property :contributor,
        :created,
        :creator,
        :dctype,
        :derives,
        :description,
        :elaborates,
        :external,
        :identifier,
        :instanceShape,
        :modified,
        :refine,
        :satisfy,
        :serviceProvider,
        :shortTitle,
        :source,
        :title,
        :trace,
        :type,
        :unioning_TypeUnioned,
        :unioning_UnioningType ;
    dcterms:description "<code>Unioning</code> is a <code>Relationship</code> that makes its <code>unioningType</code> one of the <code>unioningTypes</code> of its <code>typeUnioned</code>."^^rdf:XMLLiteral ;
    dcterms:title "UnioningShape"^^rdf:XMLLiteral .

:annotatingElement_AnnotatedElement a oslc:Property ;
    oslc:name "annotatingElement_AnnotatedElement" ;
    oslc:occurs oslc:One-or-many ;
    oslc:propertyDefinition oslc_kerml:annotatingElement_AnnotatedElement ;
    oslc:range oslc_kerml:Element ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Elements</code> that are annotated by this <code>AnnotatingElement</code>. If <code>annotation</code> is not empty, these are the <code>annotatedElements</code> of the <code>annotations</code>. If <code>annotation</code> is empty, then it is the <code>owningNamespace</code> of the <code>AnnotatingElement</code>."^^rdf:XMLLiteral .

:annotatingElement_Annotation a oslc:Property ;
    oslc:name "annotatingElement_Annotation" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:annotatingElement_Annotation ;
    oslc:range oslc_kerml:Annotation ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Annotations</code> that relate this <code>AnnotatingElement</code> to its <code>annotatedElements</code>."^^rdf:XMLLiteral .

:annotatingElement_OwnedAnnotatingRelationship a oslc:Property ;
    oslc:name "annotatingElement_OwnedAnnotatingRelationship" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:annotatingElement_OwnedAnnotatingRelationship ;
    oslc:range oslc_kerml:Annotation ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>ownedRelationships</code> of this <code>AnnotatingElement</code> that are <code>Annotations</code>, for which this <code>AnnotatingElement</code> is the <code>annotatingElement</code>."^^rdf:XMLLiteral .

:annotation_AnnotatedElement a oslc:Property ;
    oslc:name "annotation_AnnotatedElement" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:annotation_AnnotatedElement ;
    oslc:range oslc_kerml:Element ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Element</code> that is annotated by the <code>annotatingElement</code> of this Annotation."^^rdf:XMLLiteral .

:annotation_AnnotatingElement a oslc:Property ;
    oslc:name "annotation_AnnotatingElement" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:annotation_AnnotatingElement ;
    oslc:range oslc_kerml:AnnotatingElement ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>AnnotatingElement</code> that annotates the <code>annotatedElement</code> of this <code>Annotation</code>."^^rdf:XMLLiteral .

:annotation_OwningAnnotatedElement a oslc:Property ;
    oslc:name "annotation_OwningAnnotatedElement" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:annotation_OwningAnnotatedElement ;
    oslc:range oslc_kerml:Element ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>annotatedElement</code> of this <code>Annotation</code>, when it is also its <code>owningRelatedElement</code>."^^rdf:XMLLiteral .

:annotation_OwningAnnotatingElement a oslc:Property ;
    oslc:name "annotation_OwningAnnotatingElement" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:annotation_OwningAnnotatingElement ;
    oslc:range oslc_kerml:AnnotatingElement ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>annotatingElement</code> of this <code>Annotation</code>, when it is also its <code>owningRelatedElement</code>."^^rdf:XMLLiteral .

:association_AssociationEnd a oslc:Property ;
    oslc:name "association_AssociationEnd" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:association_AssociationEnd ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>features</code> of the <code>Association</code> that identify the things that can be related by it. A concrete <code>Association</code> must have at least two <code>associationEnds</code>. When it has exactly two, the <code>Association</code> is called a <em>binary</em> <code>Association</code>."^^rdf:XMLLiteral .

:association_RelatedType a oslc:Property ;
    oslc:name "association_RelatedType" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:association_RelatedType ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>types</code> of the <code>associationEnds</code> of the <code>Association</code>, which are the <code>relatedElements</code> of the <code>Association</code> considered as a <code>Relationship</code>."^^rdf:XMLLiteral .

:association_SourceType a oslc:Property ;
    oslc:name "association_SourceType" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:association_SourceType ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The source <code>relatedType</code> for this <code>Association</code>. It is the first <code>relatedType</code> of the <code>Association</code>."^^rdf:XMLLiteral .

:association_TargetType a oslc:Property ;
    oslc:name "association_TargetType" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:association_TargetType ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The target <code>relatedTypes</code> for this <code>Association</code>. This includes all the <code>relatedTypes</code> other than the <code>sourceType</code>."^^rdf:XMLLiteral .

:behavior_Parameter a oslc:Property ;
    oslc:name "behavior_Parameter" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:behavior_Parameter ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The parameters of this <code>Behavior</code>, which are defined as its <code>directedFeatures</code>, whose values are passed into and/or out of a performance of the <code>Behavior</code>."^^rdf:XMLLiteral .

:behavior_Step a oslc:Property ;
    oslc:name "behavior_Step" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:behavior_Step ;
    oslc:range oslc_kerml:Step ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Steps</code> that make up this <code>Behavior</code>."^^rdf:XMLLiteral .

:booleanExpression_Predicate a oslc:Property ;
    oslc:name "booleanExpression_Predicate" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:booleanExpression_Predicate ;
    oslc:range oslc_kerml:Predicate ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Predicate</code> that types this <code>BooleanExpression</code>."^^rdf:XMLLiteral .

:classifier_OwnedSubclassification a oslc:Property ;
    oslc:name "classifier_OwnedSubclassification" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:classifier_OwnedSubclassification ;
    oslc:range oslc_kerml:Subclassification ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>ownedSpecializations</code> of this <code>Classifier</code> that are <code>Subclassifications</code>, for which this <code>Classifier</code> is the <code>subclassifier</code>."^^rdf:XMLLiteral .

:comment_Body a oslc:Property ;
    oslc:name "comment_Body" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:comment_Body ;
    oslc:range xsd:string ;
    oslc:readOnly false ;
    dcterms:description "The annotation text for the <code>Comment</code>."^^rdf:XMLLiteral .

:comment_Locale a oslc:Property ;
    oslc:name "comment_Locale" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:comment_Locale ;
    oslc:range xsd:string ;
    oslc:readOnly false ;
    dcterms:description "Identification of the language of the <code>body</code> text and, optionally, the region and/or encoding. The format shall be a POSIX locale conformant to ISO/IEC 15897, with the format <code>[language[_territory][.codeset][@modifier]]</code>."^^rdf:XMLLiteral .

:conjugation_ConjugatedType a oslc:Property ;
    oslc:name "conjugation_ConjugatedType" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:conjugation_ConjugatedType ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Type</code> that is the result of applying <code>Conjugation</code> to the <code>originalType</code>."^^rdf:XMLLiteral .

:conjugation_OriginalType a oslc:Property ;
    oslc:name "conjugation_OriginalType" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:conjugation_OriginalType ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Type</code> to be conjugated."^^rdf:XMLLiteral .

:conjugation_OwningType a oslc:Property ;
    oslc:name "conjugation_OwningType" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:conjugation_OwningType ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>conjugatedType</code> of this <code>Conjugation</code> that is also its <code>owningRelatedElement</code>."^^rdf:XMLLiteral .

:connector_Association a oslc:Property ;
    oslc:name "connector_Association" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:connector_Association ;
    oslc:range oslc_kerml:Association ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Associations</code> that type the <code>Connector</code>."^^rdf:XMLLiteral .

:connector_ConnectorEnd a oslc:Property ;
    oslc:name "connector_ConnectorEnd" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:connector_ConnectorEnd ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>endFeatures</code> of a <code>Connector</code>, which redefine the <code>endFeatures</code> of the <code>associations</code> of the <code>Connector</code>. The <code>connectorEnds</code> determine via <code>ReferenceSubsetting</code> <code>Relationships</code> which <code>Features</code> are related by the <code>Connector</code>."^^rdf:XMLLiteral .

:connector_RelatedFeature a oslc:Property ;
    oslc:name "connector_RelatedFeature" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:connector_RelatedFeature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Features</code> that are related by this <code>Connector</code> considered as a <code>Relationship</code> and that restrict the links it identifies, given by the referenced <code>Features</code> of the <code>connectorEnds</code> of the <code>Connector</code>."^^rdf:XMLLiteral .

:connector_SourceFeature a oslc:Property ;
    oslc:name "connector_SourceFeature" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:connector_SourceFeature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The source <code>relatedFeature</code> for this <code>Connector</code>. It is the first <code>relatedFeature</code>."^^rdf:XMLLiteral .

:connector_TargetFeature a oslc:Property ;
    oslc:name "connector_TargetFeature" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:connector_TargetFeature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The target <code>relatedFeatures</code> for this <code>Connector</code>. This includes all the <code>relatedFeatures</code> other than the <code>sourceFeature</code>."^^rdf:XMLLiteral .

:dependency_Client a oslc:Property ;
    oslc:name "dependency_Client" ;
    oslc:occurs oslc:One-or-many ;
    oslc:propertyDefinition oslc_kerml:dependency_Client ;
    oslc:range oslc_kerml:Element ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Element</code> or <code>Elements</code> dependent on the <code>supplier</code> <code>Elements</code>."^^rdf:XMLLiteral .

:dependency_Supplier a oslc:Property ;
    oslc:name "dependency_Supplier" ;
    oslc:occurs oslc:One-or-many ;
    oslc:propertyDefinition oslc_kerml:dependency_Supplier ;
    oslc:range oslc_kerml:Element ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Element</code> or <code>Elements</code> on which the <code>client</code> <code>Elements</code> depend in some respect."^^rdf:XMLLiteral .

:differencing_DifferencingType a oslc:Property ;
    oslc:name "differencing_DifferencingType" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:differencing_DifferencingType ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "<code>Type</code> that partly determines interpretations of <code>typeDifferenced</code>, as described in <code>Type::differencingType</code>."^^rdf:XMLLiteral .

:differencing_TypeDifferenced a oslc:Property ;
    oslc:name "differencing_TypeDifferenced" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:differencing_TypeDifferenced ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "<code>Type</code> with interpretations partly determined by <code>differencingType</code>, as described in <code>Type::differencingType</code>."^^rdf:XMLLiteral .

:disjoining_DisjoiningType a oslc:Property ;
    oslc:name "disjoining_DisjoiningType" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:disjoining_DisjoiningType ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "<code>Type</code> asserted to be disjoint with the <code>typeDisjoined</code>."^^rdf:XMLLiteral .

:disjoining_OwningType a oslc:Property ;
    oslc:name "disjoining_OwningType" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:disjoining_OwningType ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "A <code>typeDisjoined</code> that is also an <code>owningRelatedElement</code>."^^rdf:XMLLiteral .

:disjoining_TypeDisjoined a oslc:Property ;
    oslc:name "disjoining_TypeDisjoined" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:disjoining_TypeDisjoined ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "<code>Type</code> asserted to be disjoint with the <code>disjoiningType</code>."^^rdf:XMLLiteral .

:documentation_DocumentedElement a oslc:Property ;
    oslc:name "documentation_DocumentedElement" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:documentation_DocumentedElement ;
    oslc:range oslc_kerml:Element ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Element</code> that is documented by this <code>Documentation</code>."^^rdf:XMLLiteral .

:elementFilterMembership_Condition a oslc:Property ;
    oslc:name "elementFilterMembership_Condition" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:elementFilterMembership_Condition ;
    oslc:range oslc_kerml:Expression ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The model-level evaluable <code>Boolean</code>-valued <code>Expression</code> used to filter the imported <code>members</code> of the <code>membershipOwningNamespace</code> of this <code>ElementFilterMembership</code>."^^rdf:XMLLiteral .

:element_AliasIds a oslc:Property ;
    oslc:name "element_AliasIds" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:element_AliasIds ;
    oslc:range xsd:string ;
    oslc:readOnly false ;
    dcterms:description "Various alternative identifiers for this Element. Generally, these will be set by tools."^^rdf:XMLLiteral .

:element_DeclaredName a oslc:Property ;
    oslc:name "element_DeclaredName" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:element_DeclaredName ;
    oslc:range xsd:string ;
    oslc:readOnly false ;
    dcterms:description "The declared name of this <code>Element</code>."^^rdf:XMLLiteral .

:element_DeclaredShortName a oslc:Property ;
    oslc:name "element_DeclaredShortName" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:element_DeclaredShortName ;
    oslc:range xsd:string ;
    oslc:readOnly false ;
    dcterms:description "An optional alternative name for the <code>Element</code> that is intended to be shorter or in some way more succinct than its primary <code>name</code>. It may act as a modeler-specified identifier for the <code>Element</code>, though it is then the responsibility of the modeler to maintain the uniqueness of this identifier within a model or relative to some other context."^^rdf:XMLLiteral .

:element_Documentation a oslc:Property ;
    oslc:name "element_Documentation" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:element_Documentation ;
    oslc:range oslc_kerml:Documentation ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The Documentation owned by this Element."^^rdf:XMLLiteral .

:element_ElementId a oslc:Property ;
    oslc:name "element_ElementId" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:element_ElementId ;
    oslc:range xsd:string ;
    oslc:readOnly false ;
    dcterms:description "The globally unique identifier for this Element. This is intended to be set by tooling, and it must not change during the lifetime of the Element."^^rdf:XMLLiteral .

:element_IsImpliedIncluded a oslc:Property ;
    oslc:name "element_IsImpliedIncluded" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:element_IsImpliedIncluded ;
    oslc:range xsd:boolean ;
    oslc:readOnly false ;
    dcterms:description "Whether all necessary implied Relationships have been included in the <code>ownedRelationships</code> of this Element. This property may be true, even if there are not actually any <code>ownedRelationships</code> with <code>isImplied = true</code>, meaning that no such Relationships are actually implied for this Element. However, if it is false, then <code>ownedRelationships</code> may <em>not</em> contain any implied Relationships. That is, either <em>all</em> required implied Relationships must be included, or none of them."^^rdf:XMLLiteral .

:element_IsLibraryElement a oslc:Property ;
    oslc:name "element_IsLibraryElement" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:element_IsLibraryElement ;
    oslc:range xsd:boolean ;
    oslc:readOnly false ;
    dcterms:description "Whether this Element is contained in the ownership tree of a library model."^^rdf:XMLLiteral .

:element_Name a oslc:Property ;
    oslc:name "element_Name" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:element_Name ;
    oslc:range xsd:string ;
    oslc:readOnly false ;
    dcterms:description "The name to be used for this <code>Element</code> during name resolution within its <code>owningNamespace</code>. This is derived using the <code>effectiveName()</code> operation. By default, it is the same as the <code>declaredName</code>, but this is overridden for certain kinds of <code>Elements</code> to compute a <code>name</code> even when the <code>declaredName</code> is null."^^rdf:XMLLiteral .

:element_OwnedAnnotation a oslc:Property ;
    oslc:name "element_OwnedAnnotation" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:element_OwnedAnnotation ;
    oslc:range oslc_kerml:Annotation ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>ownedRelationships</code> of this <code>Element</code> that are <code>Annotations</code>, for which this <code>Element</code> is the <code>annotatedElement</code>."^^rdf:XMLLiteral .

:element_OwnedElement a oslc:Property ;
    oslc:name "element_OwnedElement" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:element_OwnedElement ;
    oslc:range oslc_kerml:Element ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The Elements owned by this Element, derived as the <tt>ownedRelatedElements</tt> of the <tt>ownedRelationships</tt> of this Element."^^rdf:XMLLiteral .

:element_OwnedRelationship a oslc:Property ;
    oslc:name "element_OwnedRelationship" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:element_OwnedRelationship ;
    oslc:range oslc_kerml:Relationship ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The Relationships for which this Element is the <tt>owningRelatedElement</tt>."^^rdf:XMLLiteral .

:element_Owner a oslc:Property ;
    oslc:name "element_Owner" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:element_Owner ;
    oslc:range oslc_kerml:Element ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The owner of this Element, derived as the <code>owningRelatedElement</code> of the <code>owningRelationship</code> of this Element, if any."^^rdf:XMLLiteral .

:element_OwningMembership a oslc:Property ;
    oslc:name "element_OwningMembership" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:element_OwningMembership ;
    oslc:range oslc_kerml:OwningMembership ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>owningRelationship</code> of this <code>Element</code>, if that <code>Relationship</code> is a <code>Membership</code>."^^rdf:XMLLiteral .

:element_OwningNamespace a oslc:Property ;
    oslc:name "element_OwningNamespace" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:element_OwningNamespace ;
    oslc:range oslc_kerml:Namespace ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Namespace</code> that owns this <code>Element</code>, which is the <code>membershipOwningNamespace</code> of the <code>owningMembership</code> of this <code>Element</code>, if any."^^rdf:XMLLiteral .

:element_OwningRelationship a oslc:Property ;
    oslc:name "element_OwningRelationship" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:element_OwningRelationship ;
    oslc:range oslc_kerml:Relationship ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The Relationship for which this Element is an <tt>ownedRelatedElement</tt>, if any."^^rdf:XMLLiteral .

:element_QualifiedName a oslc:Property ;
    oslc:name "element_QualifiedName" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:element_QualifiedName ;
    oslc:range xsd:string ;
    oslc:readOnly false ;
    dcterms:description "The full ownership-qualified name of this <code>Element</code>, represented in a form that is valid according to the KerML textual concrete syntax for qualified names (including use of unrestricted name notation and escaped characters, as necessary). The <code>qualifiedName</code> is null if this <code>Element</code> has no <code>owningNamespace</code> or if there is not a complete ownership chain of named <code>Namespaces</code> from a root <code>Namespace</code> to this <code>Element</code>."^^rdf:XMLLiteral .

:element_ShortName a oslc:Property ;
    oslc:name "element_ShortName" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:element_ShortName ;
    oslc:range xsd:string ;
    oslc:readOnly false ;
    dcterms:description "The short name to be used for this <code>Element</code> during name resolution within its <code>owningNamespace</code>. This is derived using the <code>effectiveShortName()</code> operation. By default, it is the same as the <code>declaredShortName</code>, but this is overridden for certain kinds of <code>Elements</code> to compute a <code>shortName</code> even when the <code>declaredName</code> is null."^^rdf:XMLLiteral .

:element_TextualRepresentation a oslc:Property ;
    oslc:name "element_TextualRepresentation" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:element_TextualRepresentation ;
    oslc:range oslc_kerml:TextualRepresentation ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>TextualRepresentations</code> that annotate this <code>Element</code>."^^rdf:XMLLiteral .

:expression_Function a oslc:Property ;
    oslc:name "expression_Function" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:expression_Function ;
    oslc:range oslc_kerml:Function ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Function</code> that types this <code>Expression</code>."^^rdf:XMLLiteral .

:expression_IsModelLevelEvaluable a oslc:Property ;
    oslc:name "expression_IsModelLevelEvaluable" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:expression_IsModelLevelEvaluable ;
    oslc:range xsd:boolean ;
    oslc:readOnly false ;
    dcterms:description "Whether this <code>Expression</code> meets the constraints necessary to be evaluated at <em>model level</em>, that is, using metadata within the model."^^rdf:XMLLiteral .

:expression_Result a oslc:Property ;
    oslc:name "expression_Result" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:expression_Result ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "."^^rdf:XMLLiteral .

:featureChainExpression_TargetFeature a oslc:Property ;
    oslc:name "featureChainExpression_TargetFeature" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:featureChainExpression_TargetFeature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Feature</code> that is accessed by this <code>FeatureChainExpression<code>, which is its first non-<code>parameter</code> <code>member</code>.<p/></code></code>."^^rdf:XMLLiteral .

:featureChaining_ChainingFeature a oslc:Property ;
    oslc:name "featureChaining_ChainingFeature" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:featureChaining_ChainingFeature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Feature</code> whose values partly determine values of <code>featureChained</code>, as described in <code>Feature::chainingFeature</code>."^^rdf:XMLLiteral .

:featureChaining_FeatureChained a oslc:Property ;
    oslc:name "featureChaining_FeatureChained" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:featureChaining_FeatureChained ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Feature</code> whose values are partly determined by values of the <code>chainingFeature</code>, as described in <code>Feature::chainingFeature</code>."^^rdf:XMLLiteral .

:featureInverting_FeatureInverted a oslc:Property ;
    oslc:name "featureInverting_FeatureInverted" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:featureInverting_FeatureInverted ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Feature</code> that is an inverse of the <code>invertingFeature</code>."^^rdf:XMLLiteral .

:featureInverting_InvertingFeature a oslc:Property ;
    oslc:name "featureInverting_InvertingFeature" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:featureInverting_InvertingFeature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Feature</code> that is an inverse of the <code>invertedFeature</code>."^^rdf:XMLLiteral .

:featureInverting_OwningFeature a oslc:Property ;
    oslc:name "featureInverting_OwningFeature" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:featureInverting_OwningFeature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "A <code>featureInverted</code> that is also the <code>owningRelatedElement</code> of this <code>FeatureInverting</code>."^^rdf:XMLLiteral .

:featureMembership_OwnedMemberFeature a oslc:Property ;
    oslc:name "featureMembership_OwnedMemberFeature" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:featureMembership_OwnedMemberFeature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Feature</code> that this <code>FeatureMembership</code> relates to its <code>owningType</code>, making it an <code>ownedFeature</code> of the <code>owningType</code>."^^rdf:XMLLiteral .

:featureMembership_OwningType a oslc:Property ;
    oslc:name "featureMembership_OwningType" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:featureMembership_OwningType ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Type</code> that owns this <code>FeatureMembership</code>."^^rdf:XMLLiteral .

:featureReferenceExpression_Referent a oslc:Property ;
    oslc:name "featureReferenceExpression_Referent" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:featureReferenceExpression_Referent ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Feature</code> that is referenced by this <code>FeatureReferenceExpression</code>, which is its first non-<code>parameter</code> <code>member</code>."^^rdf:XMLLiteral .

:featureTyping_OwningFeature a oslc:Property ;
    oslc:name "featureTyping_OwningFeature" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:featureTyping_OwningFeature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "A <code>typedFeature</code> that is also the <code>owningRelatedElement</code> of this <code>FeatureTyping</code>."^^rdf:XMLLiteral .

:featureTyping_Type a oslc:Property ;
    oslc:name "featureTyping_Type" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:featureTyping_Type ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Type</code> that is being applied by this <code>FeatureTyping</code>."^^rdf:XMLLiteral .

:featureTyping_TypedFeature a oslc:Property ;
    oslc:name "featureTyping_TypedFeature" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:featureTyping_TypedFeature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Feature</code> that has a <code>type</code> determined by this <code>FeatureTyping</code>."^^rdf:XMLLiteral .

:featureValue_FeatureWithValue a oslc:Property ;
    oslc:name "featureValue_FeatureWithValue" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:featureValue_FeatureWithValue ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Feature</code> to be provided a value."^^rdf:XMLLiteral .

:featureValue_IsDefault a oslc:Property ;
    oslc:name "featureValue_IsDefault" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:featureValue_IsDefault ;
    oslc:range xsd:boolean ;
    oslc:readOnly false ;
    dcterms:description "Whether this <code>FeatureValue</code> is a concrete specification of the bound or initial value of the <code>featureWithValue</code>, or just a default value that may be overridden."^^rdf:XMLLiteral .

:featureValue_IsInitial a oslc:Property ;
    oslc:name "featureValue_IsInitial" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:featureValue_IsInitial ;
    oslc:range xsd:boolean ;
    oslc:readOnly false ;
    dcterms:description "Whether this <code>FeatureValue</code> specifies a bound value or an initial value for the <code>featureWithValue</code>."^^rdf:XMLLiteral .

:featureValue_Value a oslc:Property ;
    oslc:name "featureValue_Value" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:featureValue_Value ;
    oslc:range oslc_kerml:Expression ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Expression</code> that provides the value of the <code>featureWithValue</code> as its <code>result</code>."^^rdf:XMLLiteral .

:feature_ChainingFeature a oslc:Property ;
    oslc:name "feature_ChainingFeature" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:feature_ChainingFeature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Feature</code> that are chained together to determine the values of this <code>Feature</code>, derived from the <code>chainingFeatures</code> of the <code>ownedFeatureChainings</code> of this <code>Feature</code>, in the same order. The values of a <code>Feature</code> with <code>chainingFeatures</code> are the same as values of the last <code>Feature</code> in the chain, which can be found by starting with the values of the first <code>Feature</code> (for each instance of the domain of the original <code>Feature</code>), then using each of those as domain instances to find the values of the second <code>Feature</code> in chainingFeatures, and so on, to values of the last <code>Feature</code>."^^rdf:XMLLiteral .

:feature_Direction a oslc:Property ;
    oslc:name "feature_Direction" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:feature_Direction ;
    oslc:range <http://open-services.net/ns/sysmlv2#FeatureDirectionKind> ;
    oslc:readOnly false ;
    dcterms:description "Indicates how values of this <code>Feature</code> are determined or used (as specified for the <code>FeatureDirectionKind</code>)."^^rdf:XMLLiteral .

:feature_EndOwningType a oslc:Property ;
    oslc:name "feature_EndOwningType" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:feature_EndOwningType ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Type</code> that is related to this <code>Feature</code> by an <code>EndFeatureMembership</code> in which the <code>Feature</code> is an <code>ownedMemberFeature</code>."^^rdf:XMLLiteral .

:feature_FeaturingType a oslc:Property ;
    oslc:name "feature_FeaturingType" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:feature_FeaturingType ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "<code>Types</code> that feature this <code>Feature</code>, such that any instance in the domain of the <code>Feature</code> must be classified by all of these <code>Types</code>, including at least all the <code>featuringTypes</code> of its <code>typeFeaturings</code>.  If the <code>Feature</code> is chained, then the <code>featuringTypes</code> of the first <code>Feature</code> in the chain are also <code>featuringTypes</code> of the chained <code>Feature</code>."^^rdf:XMLLiteral .

:feature_IsComposite a oslc:Property ;
    oslc:name "feature_IsComposite" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:feature_IsComposite ;
    oslc:range xsd:boolean ;
    oslc:readOnly false ;
    dcterms:description "Whether the <code>Feature</code> is a composite <code>feature</code> of its <code>featuringType</code>. If so, the values of the <code>Feature</code> cannot exist after its featuring instance no longer does."^^rdf:XMLLiteral .

:feature_IsDerived a oslc:Property ;
    oslc:name "feature_IsDerived" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:feature_IsDerived ;
    oslc:range xsd:boolean ;
    oslc:readOnly false ;
    dcterms:description "Whether the values of this <code>Feature</code> can always be computed from the values of other <code>Features</code>."^^rdf:XMLLiteral .

:feature_IsEnd a oslc:Property ;
    oslc:name "feature_IsEnd" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:feature_IsEnd ;
    oslc:range xsd:boolean ;
    oslc:readOnly false ;
    dcterms:description "Whether or not the this <code>Feature</code> is an end <code>Feature</code>, requiring a different interpretation of the <code>multiplicity</code> of the <code>Feature</code>."^^rdf:XMLLiteral .

:feature_IsOrdered a oslc:Property ;
    oslc:name "feature_IsOrdered" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:feature_IsOrdered ;
    oslc:range xsd:boolean ;
    oslc:readOnly false ;
    dcterms:description "Whether an order exists for the values of this <code>Feature</code> or not."^^rdf:XMLLiteral .

:feature_IsPortion a oslc:Property ;
    oslc:name "feature_IsPortion" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:feature_IsPortion ;
    oslc:range xsd:boolean ;
    oslc:readOnly false ;
    dcterms:description "Whether the values of this <code>Feature</code> are contained in the space and time of instances of the domain of the <code>Feature</code> and represent the same thing as those instances."^^rdf:XMLLiteral .

:feature_IsReadOnly a oslc:Property ;
    oslc:name "feature_IsReadOnly" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:feature_IsReadOnly ;
    oslc:range xsd:boolean ;
    oslc:readOnly false ;
    dcterms:description "Whether the values of this <code>Feature</code> can change over the lifetime of an instance of the domain."^^rdf:XMLLiteral .

:feature_IsUnique a oslc:Property ;
    oslc:name "feature_IsUnique" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:feature_IsUnique ;
    oslc:range xsd:boolean ;
    oslc:readOnly false ;
    dcterms:description "Whether or not values for this <code>Feature</code> must have no duplicates or not."^^rdf:XMLLiteral .

:feature_OwnedFeatureChaining a oslc:Property ;
    oslc:name "feature_OwnedFeatureChaining" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:feature_OwnedFeatureChaining ;
    oslc:range oslc_kerml:FeatureChaining ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>ownedRelationships</code> of this <code>Feature</code> that are <code>FeatureChainings</code>, for which the <code>Feature</code> will be the <code>featureChained</code>."^^rdf:XMLLiteral .

:feature_OwnedFeatureInverting a oslc:Property ;
    oslc:name "feature_OwnedFeatureInverting" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:feature_OwnedFeatureInverting ;
    oslc:range oslc_kerml:FeatureInverting ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>ownedRelationships</code> of this <code>Feature</code> that are <code>FeatureInvertings</code> and for which the <code>Feature</code> is the <code>featureInverted</code>."^^rdf:XMLLiteral .

:feature_OwnedRedefinition a oslc:Property ;
    oslc:name "feature_OwnedRedefinition" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:feature_OwnedRedefinition ;
    oslc:range oslc_kerml:Redefinition ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>ownedSubsettings</code> of this <code>Feature</code> that are <code>Redefinitions</code>, for which the <code>Feature</code> is the <code>redefiningFeature</code>."^^rdf:XMLLiteral .

:feature_OwnedReferenceSubsetting a oslc:Property ;
    oslc:name "feature_OwnedReferenceSubsetting" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:feature_OwnedReferenceSubsetting ;
    oslc:range oslc_kerml:ReferenceSubsetting ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The one <code>ownedSubsetting</code> of this <code>Feature</code>, if any, that is a <code>ReferenceSubsetting</code>, for which the <code>Feature</code> is the <code>referencingFeature</code>."^^rdf:XMLLiteral .

:feature_OwnedSubsetting a oslc:Property ;
    oslc:name "feature_OwnedSubsetting" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:feature_OwnedSubsetting ;
    oslc:range oslc_kerml:Subsetting ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>ownedSpecializations</code> of this <code>Feature</code> that are <code>Subsettings</code>, for which the <code>Feature</code> is the <code>subsettingFeature</code>."^^rdf:XMLLiteral .

:feature_OwnedTypeFeaturing a oslc:Property ;
    oslc:name "feature_OwnedTypeFeaturing" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:feature_OwnedTypeFeaturing ;
    oslc:range oslc_kerml:TypeFeaturing ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>ownedRelationships</code> of this <code>Feature</code> that are <code>TypeFeaturings</code> and for which the <code>Feature</code> is the <code>featureOfType</code>."^^rdf:XMLLiteral .

:feature_OwnedTyping a oslc:Property ;
    oslc:name "feature_OwnedTyping" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:feature_OwnedTyping ;
    oslc:range oslc_kerml:FeatureTyping ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>ownedSpecializations</code> of this <code>Feature</code> that are <code>FeatureTypings</code>, for which the <code>Feature</code> is the <code>typedFeature</code>."^^rdf:XMLLiteral .

:feature_OwningFeatureMembership a oslc:Property ;
    oslc:name "feature_OwningFeatureMembership" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:feature_OwningFeatureMembership ;
    oslc:range oslc_kerml:FeatureMembership ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>FeatureMembership</code> that owns this <code>Feature</code> as an <code>ownedMemberFeature</code>, determining its <code>owningType</code>."^^rdf:XMLLiteral .

:feature_OwningType a oslc:Property ;
    oslc:name "feature_OwningType" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:feature_OwningType ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Type</code> that is the <code>owningType</code> of the <code>owningFeatureMembership</code> of this <code>Feature</code>."^^rdf:XMLLiteral .

:feature_Type a oslc:Property ;
    oslc:name "feature_Type" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:feature_Type ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "<code>Types</code> that restrict the values of this <code>Feature</code>, such that the values must be instances of all the <code>types</code>. The types of a <code>Feature</code> are derived from its <code>typings</code> and the <code>types</code> of its <code>subsettings</code>. If the <code>Feature</code> is chained, then the <code>types</code> of the last <code>Feature</code> in the chain are also <code>types</code> of the chained <code>Feature</code>."^^rdf:XMLLiteral .

:featuring_Feature a oslc:Property ;
    oslc:name "featuring_Feature" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:featuring_Feature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Feature</code> that is featured by the <code>featuringType</code>."^^rdf:XMLLiteral .

:featuring_Type a oslc:Property ;
    oslc:name "featuring_Type" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:featuring_Type ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Type<code> that features the <code>featureOfType</code>.</code></code>."^^rdf:XMLLiteral .

:function_Expression a oslc:Property ;
    oslc:name "function_Expression" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:function_Expression ;
    oslc:range oslc_kerml:Expression ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Expressions</code> that are <code>steps</code> in the calculation of the <code>result</code> of this <code>Function</code>."^^rdf:XMLLiteral .

:function_IsModelLevelEvaluable a oslc:Property ;
    oslc:name "function_IsModelLevelEvaluable" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:function_IsModelLevelEvaluable ;
    oslc:range xsd:boolean ;
    oslc:readOnly false ;
    dcterms:description "Whether this <code>Function</code> can be used as the <code>function</code> of a model-level evaluable <code>InvocationExpression</code>. Certain <code>Functions</code> from the Kernel Functions Library are considered to have <code>isModelLevelEvaluable = true</code>. For all other <code>Functions</code> it is <code>false</code>."^^rdf:XMLLiteral .

:function_Result a oslc:Property ;
    oslc:name "function_Result" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:function_Result ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>result</code> <code>parameter</code> of the <code>Function</code>, which is owned by the <code>Function</code> via a <code>ReturnParameterMembership</code>."^^rdf:XMLLiteral .

:import_ImportOwningNamespace a oslc:Property ;
    oslc:name "import_ImportOwningNamespace" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:import_ImportOwningNamespace ;
    oslc:range oslc_kerml:Namespace ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The Namespace into which Memberships are imported by this Import, which must be the <code>owningRelatedElement</code> of the Import."^^rdf:XMLLiteral .

:import_ImportedElement a oslc:Property ;
    oslc:name "import_ImportedElement" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:import_ImportedElement ;
    oslc:range oslc_kerml:Element ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The effectively imported <code>Element</code> for this Import. For a <code>MembershipImport</code>, this is the <code>memberElement</code> of the <code>importedMembership</code>. For a <code>NamespaceImport</code>, it is the <code>importedNamespace</code>."^^rdf:XMLLiteral .

:import_IsImportAll a oslc:Property ;
    oslc:name "import_IsImportAll" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:import_IsImportAll ;
    oslc:range xsd:boolean ;
    oslc:readOnly false ;
    dcterms:description "Whether to import memberships without regard to declared visibility."^^rdf:XMLLiteral .

:import_IsRecursive a oslc:Property ;
    oslc:name "import_IsRecursive" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:import_IsRecursive ;
    oslc:range xsd:boolean ;
    oslc:readOnly false ;
    dcterms:description "Whether to recursively import Memberships from visible, owned sub-Namespaces."^^rdf:XMLLiteral .

:import_Visibility a oslc:Property ;
    oslc:name "import_Visibility" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:import_Visibility ;
    oslc:range <http://open-services.net/ns/sysmlv2#VisibilityKind> ;
    oslc:readOnly false ;
    dcterms:description "The visibility level of the imported <code>members</code> from this Import relative to the <code>importOwningNamespace</code>."^^rdf:XMLLiteral .

:intersecting_IntersectingType a oslc:Property ;
    oslc:name "intersecting_IntersectingType" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:intersecting_IntersectingType ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "<code>Type</code> that partly determines interpretations of <code>typeIntersected</code>, as described in <code>Type::intersectingType</code>."^^rdf:XMLLiteral .

:intersecting_TypeIntersected a oslc:Property ;
    oslc:name "intersecting_TypeIntersected" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:intersecting_TypeIntersected ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "<code>Type</code> with interpretations partly determined by <code>intersectingType</code>, as described in <code>Type::intersectingType</code>."^^rdf:XMLLiteral .

:invariant_IsNegated a oslc:Property ;
    oslc:name "invariant_IsNegated" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:invariant_IsNegated ;
    oslc:range xsd:boolean ;
    oslc:readOnly false ;
    dcterms:description "Whether this <code>Invariant</code> is asserted to be false rather than true."^^rdf:XMLLiteral .

:invocationExpression_Argument a oslc:Property ;
    oslc:name "invocationExpression_Argument" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:invocationExpression_Argument ;
    oslc:range oslc_kerml:Expression ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>value</code> <code>Expressions</code> of the <code>FeatureValues</code> of the owned input <code>parameters</code> of the <code>InvocationExpression</code>."^^rdf:XMLLiteral .

:itemFlow_Interaction a oslc:Property ;
    oslc:name "itemFlow_Interaction" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:itemFlow_Interaction ;
    oslc:range oslc_kerml:Interaction ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Interactions</code> that type this <code>ItemFlow</code>. <code>Interactions</code> are both <code>Associations</code> and <code>Behaviors</code>, which can type <code>Connectors</code> and <code>Steps</code>, respectively."^^rdf:XMLLiteral .

:itemFlow_ItemFeature a oslc:Property ;
    oslc:name "itemFlow_ItemFeature" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:itemFlow_ItemFeature ;
    oslc:range oslc_kerml:ItemFeature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>ownedFeature</code> of the <code>ItemFlow</code> that is an <code>ItemFeature</code> (if any)."^^rdf:XMLLiteral .

:itemFlow_ItemFlowEnd a oslc:Property ;
    oslc:name "itemFlow_ItemFlowEnd" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:itemFlow_ItemFlowEnd ;
    oslc:range oslc_kerml:ItemFlowEnd ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>connectorEnds</code> of this <code>ItemFlow</code> that are <code>ItemFlowEnds</code>."^^rdf:XMLLiteral .

:itemFlow_ItemType a oslc:Property ;
    oslc:name "itemFlow_ItemType" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:itemFlow_ItemType ;
    oslc:range oslc_kerml:Classifier ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The type of values transferred, which is the <code>type</code> of the <code>itemFeature</code> of the <code>ItemFlow</code>."^^rdf:XMLLiteral .

:itemFlow_SourceOutputFeature a oslc:Property ;
    oslc:name "itemFlow_SourceOutputFeature" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:itemFlow_SourceOutputFeature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Feature</code> that provides the items carried by the <code>ItemFlow</code>. It must be an owned <code>output</code> of the <code>source</code> of the <code>ItemFlow</code>."^^rdf:XMLLiteral .

:itemFlow_TargetInputFeature a oslc:Property ;
    oslc:name "itemFlow_TargetInputFeature" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:itemFlow_TargetInputFeature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Feature</code> that receives the values carried by the <code>ItemFlow</code>. It must be an owned <code>output</code> of the target participant of the <code>ItemFlow</code>."^^rdf:XMLLiteral .

:libraryPackage_IsStandard a oslc:Property ;
    oslc:name "libraryPackage_IsStandard" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:libraryPackage_IsStandard ;
    oslc:range xsd:boolean ;
    oslc:readOnly false ;
    dcterms:description "Whether this <code>LibraryPackage</code> contains a standard library model. This should only be set to true for <code>LibraryPackages</code> in the standard Kernel Model Libraries or in normative model libraries for a language built on KerML."^^rdf:XMLLiteral .

:literalBoolean_Value a oslc:Property ;
    oslc:name "literalBoolean_Value" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:literalBoolean_Value ;
    oslc:range xsd:boolean ;
    oslc:readOnly false ;
    dcterms:description "The <code><em>Boolean</em></code> value that is the result of evaluating this <code>LiteralBoolean</code>."^^rdf:XMLLiteral .

:literalInteger_Value a oslc:Property ;
    oslc:name "literalInteger_Value" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:literalInteger_Value ;
    oslc:range xsd:integer ;
    oslc:readOnly false ;
    dcterms:description "The <code><em>Integer</em></code> value that is the result of evaluating this <code>LiteralInteger</code>."^^rdf:XMLLiteral .

:literalRational_Value a oslc:Property ;
    oslc:name "literalRational_Value" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:literalRational_Value ;
    oslc:range xsd:float ;
    oslc:readOnly false ;
    dcterms:description "The value whose rational approximation is the result of evaluating this <code>LiteralRational</code>."^^rdf:XMLLiteral .

:literalString_Value a oslc:Property ;
    oslc:name "literalString_Value" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:literalString_Value ;
    oslc:range xsd:string ;
    oslc:readOnly false ;
    dcterms:description "The <code><em>String</em></code> value that is the result of evaluating this <code>LiteralString</code>."^^rdf:XMLLiteral .

:membershipImport_ImportedMembership a oslc:Property ;
    oslc:name "membershipImport_ImportedMembership" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:membershipImport_ImportedMembership ;
    oslc:range oslc_kerml:Membership ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Membership</code> to be imported."^^rdf:XMLLiteral .

:membership_MemberElement a oslc:Property ;
    oslc:name "membership_MemberElement" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:membership_MemberElement ;
    oslc:range oslc_kerml:Element ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Element</code> that becomes a <code>member</code> of the <code>membershipOwningNamespace</code> due to this <code>Membership</code>."^^rdf:XMLLiteral .

:membership_MemberElementId a oslc:Property ;
    oslc:name "membership_MemberElementId" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:membership_MemberElementId ;
    oslc:range xsd:string ;
    oslc:readOnly false ;
    dcterms:description "The <code>elementId</code> of the <code>memberElement</code>."^^rdf:XMLLiteral .

:membership_MemberName a oslc:Property ;
    oslc:name "membership_MemberName" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:membership_MemberName ;
    oslc:range xsd:string ;
    oslc:readOnly false ;
    dcterms:description "The name of the <code>memberElement</code> relative to the <code>membershipOwningNamespace</code>."^^rdf:XMLLiteral .

:membership_MemberShortName a oslc:Property ;
    oslc:name "membership_MemberShortName" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:membership_MemberShortName ;
    oslc:range xsd:string ;
    oslc:readOnly false ;
    dcterms:description "The short name of the <code>memberElement</code> relative to the <code>membershipOwningNamespace</code>."^^rdf:XMLLiteral .

:membership_MembershipOwningNamespace a oslc:Property ;
    oslc:name "membership_MembershipOwningNamespace" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:membership_MembershipOwningNamespace ;
    oslc:range oslc_kerml:Namespace ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Namespace</code> of which the <code>memberElement</code> becomes a <cpde>member due to this <code>Membership</code>.</cpde>."^^rdf:XMLLiteral .

:membership_Visibility a oslc:Property ;
    oslc:name "membership_Visibility" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:membership_Visibility ;
    oslc:range <http://open-services.net/ns/sysmlv2#VisibilityKind> ;
    oslc:readOnly false ;
    dcterms:description "Whether or not the <code>Membership</code> of the <code>memberElement</code> in the <code>membershipOwningNamespace</code> is publicly visible outside that <code>Namespace</code>."^^rdf:XMLLiteral .

:metadataAccessExpression_ReferencedElement a oslc:Property ;
    oslc:name "metadataAccessExpression_ReferencedElement" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:metadataAccessExpression_ReferencedElement ;
    oslc:range oslc_kerml:Element ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description " The <code>Element</code> whose metadata is being accessed."^^rdf:XMLLiteral .

:metadataFeature_Metaclass a oslc:Property ;
    oslc:name "metadataFeature_Metaclass" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:metadataFeature_Metaclass ;
    oslc:range oslc_kerml:Metaclass ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>type</code> of this <code>MetadataFeature</code>, which must be a <code>Metaclass</code>."^^rdf:XMLLiteral .

:multiplicityRange_Bound a oslc:Property ;
    oslc:name "multiplicityRange_Bound" ;
    oslc:occurs oslc:One-or-many ;
    oslc:propertyDefinition oslc_kerml:multiplicityRange_Bound ;
    oslc:range oslc_kerml:Expression ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The owned <code>Expressions</code> of the <code>MultiplicityRange</code> whose results provide its bounds. These must be the only <code>ownedMembers</code> of the <code>MultiplicityRange</code>."^^rdf:XMLLiteral .

:multiplicityRange_LowerBound a oslc:Property ;
    oslc:name "multiplicityRange_LowerBound" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:multiplicityRange_LowerBound ;
    oslc:range oslc_kerml:Expression ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Expression</code> whose result provides the lower bound of the <code>MultiplicityRange</code>. If no <code>lowerBound</code> <code>Expression</code> is given, then the lower bound shall have the same value as the upper bound, unless the upper bound is unbounded (<code>*</code>), in which case the lower bound shall be 0."^^rdf:XMLLiteral .

:multiplicityRange_UpperBound a oslc:Property ;
    oslc:name "multiplicityRange_UpperBound" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:multiplicityRange_UpperBound ;
    oslc:range oslc_kerml:Expression ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Expression</code> whose result is the upper bound of the <code>MultiplicityRange</code>."^^rdf:XMLLiteral .

:namespaceImport_ImportedNamespace a oslc:Property ;
    oslc:name "namespaceImport_ImportedNamespace" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:namespaceImport_ImportedNamespace ;
    oslc:range oslc_kerml:Namespace ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Namespace</code> whose visible <code>Memberships</code> are imported by this <code>NamespaceImport</code>."^^rdf:XMLLiteral .

:namespace_ImportedMembership a oslc:Property ;
    oslc:name "namespace_ImportedMembership" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:namespace_ImportedMembership ;
    oslc:range oslc_kerml:Membership ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Memberships</code> in this <code>Namespace</code> that result from the <code>ownedImports</code> of this <code>Namespace</code>."^^rdf:XMLLiteral .

:namespace_Member a oslc:Property ;
    oslc:name "namespace_Member" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:namespace_Member ;
    oslc:range oslc_kerml:Element ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The set of all member <code>Elements</code> of this <code>Namespace</code>, which are the <code>memberElements</code> of all <code>memberships</code> of the <code>Namespace</code>."^^rdf:XMLLiteral .

:namespace_Membership a oslc:Property ;
    oslc:name "namespace_Membership" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:namespace_Membership ;
    oslc:range oslc_kerml:Membership ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "All <code>Memberships</code> in this <code>Namespace</code>, including (at least) the union of <code>ownedMemberships</code> and <code>importedMemberships</code>."^^rdf:XMLLiteral .

:namespace_OwnedImport a oslc:Property ;
    oslc:name "namespace_OwnedImport" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:namespace_OwnedImport ;
    oslc:range oslc_kerml:Import ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>ownedRelationships</code> of this <code>Namespace</code> that are <code>Imports</code>, for which the <code>Namespace</code> is the <code>importOwningNamespace</code>."^^rdf:XMLLiteral .

:namespace_OwnedMember a oslc:Property ;
    oslc:name "namespace_OwnedMember" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:namespace_OwnedMember ;
    oslc:range oslc_kerml:Element ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The owned <code>members</code> of this <code>Namespace</code>, which are the <cpde><code>ownedMemberElements</code> of the <code>ownedMemberships</code> of the .</cpde>."^^rdf:XMLLiteral .

:namespace_OwnedMembership a oslc:Property ;
    oslc:name "namespace_OwnedMembership" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:namespace_OwnedMembership ;
    oslc:range oslc_kerml:Membership ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>ownedRelationships</code> of this <code>Namespace</code> that are <code>Memberships</code>, for which the <code>Namespace</code> is the <code>membershipOwningNamespace</code>."^^rdf:XMLLiteral .

:operatorExpression_Operator a oslc:Property ;
    oslc:name "operatorExpression_Operator" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:operatorExpression_Operator ;
    oslc:range xsd:string ;
    oslc:readOnly false ;
    dcterms:description "An <code>operator</code> symbol that names a corresponding <code>Function</code> from one of the standard packages from the Kernel Function Library ."^^rdf:XMLLiteral .

:owningMembership_OwnedMemberElement a oslc:Property ;
    oslc:name "owningMembership_OwnedMemberElement" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:owningMembership_OwnedMemberElement ;
    oslc:range oslc_kerml:Element ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Element</code> that becomes an <code>ownedMember</code> of the <code>membershipOwningNamespace</code> due to this <code>OwningMembership</code>."^^rdf:XMLLiteral .

:owningMembership_OwnedMemberElementId a oslc:Property ;
    oslc:name "owningMembership_OwnedMemberElementId" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:owningMembership_OwnedMemberElementId ;
    oslc:range xsd:string ;
    oslc:readOnly false ;
    dcterms:description "The <code>elementId</code> of the <code>ownedMemberElement</code>."^^rdf:XMLLiteral .

:owningMembership_OwnedMemberName a oslc:Property ;
    oslc:name "owningMembership_OwnedMemberName" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:owningMembership_OwnedMemberName ;
    oslc:range xsd:string ;
    oslc:readOnly false ;
    dcterms:description "The <code>name</code> of the <code>ownedMemberElement</code>."^^rdf:XMLLiteral .

:owningMembership_OwnedMemberShortName a oslc:Property ;
    oslc:name "owningMembership_OwnedMemberShortName" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:owningMembership_OwnedMemberShortName ;
    oslc:range xsd:string ;
    oslc:readOnly false ;
    dcterms:description "The <code>shortName</code> of the <code>ownedMemberElement</code>."^^rdf:XMLLiteral .

:package_FilterCondition a oslc:Property ;
    oslc:name "package_FilterCondition" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:package_FilterCondition ;
    oslc:range oslc_kerml:Expression ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The model-level evaluable <code><em>Boolean</em></code>-valued <code>Expression</code> used to filter the <code>members</code> of this <code>Package</code>, which are owned by the <code>Package</code> are via <code>ElementFilterMemberships</code>."^^rdf:XMLLiteral .

:parameterMembership_OwnedMemberParameter a oslc:Property ;
    oslc:name "parameterMembership_OwnedMemberParameter" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:parameterMembership_OwnedMemberParameter ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Feature</code> that is identified as a <code>parameter</code> by this <code>ParameterMembership</code>."^^rdf:XMLLiteral .

:redefinition_RedefinedFeature a oslc:Property ;
    oslc:name "redefinition_RedefinedFeature" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:redefinition_RedefinedFeature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Feature</code> that is redefined by the <code>redefiningFeature</code> of this <code>Redefinition</code>."^^rdf:XMLLiteral .

:redefinition_RedefiningFeature a oslc:Property ;
    oslc:name "redefinition_RedefiningFeature" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:redefinition_RedefiningFeature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Feature</code> that is redefining the <code>redefinedFeature</code> of this <code>Redefinition</code>."^^rdf:XMLLiteral .

:referenceSubsetting_ReferencedFeature a oslc:Property ;
    oslc:name "referenceSubsetting_ReferencedFeature" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:referenceSubsetting_ReferencedFeature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Feature</code> that is referenced by the <code>referencingFeature</code> of this <code>ReferenceSubsetting</code>."^^rdf:XMLLiteral .

:referenceSubsetting_ReferencingFeature a oslc:Property ;
    oslc:name "referenceSubsetting_ReferencingFeature" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:referenceSubsetting_ReferencingFeature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Feature</code> that owns this <code>ReferenceSubsetting</code> relationship, which is also its <code>subsettingFeature</code>."^^rdf:XMLLiteral .

:relationship_IsImplied a oslc:Property ;
    oslc:name "relationship_IsImplied" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:relationship_IsImplied ;
    oslc:range xsd:boolean ;
    oslc:readOnly false ;
    dcterms:description "Whether this Relationship was generated by tooling to meet semantic rules, rather than being directly created by a modeler."^^rdf:XMLLiteral .

:relationship_OwnedRelatedElement a oslc:Property ;
    oslc:name "relationship_OwnedRelatedElement" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:relationship_OwnedRelatedElement ;
    oslc:range oslc_kerml:Element ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <tt>relatedElements</tt> of this Relationship that are owned by the Relationship."^^rdf:XMLLiteral .

:relationship_OwningRelatedElement a oslc:Property ;
    oslc:name "relationship_OwningRelatedElement" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:relationship_OwningRelatedElement ;
    oslc:range oslc_kerml:Element ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <tt>relatedElement</tt> of this Relationship that owns the Relationship, if any."^^rdf:XMLLiteral .

:relationship_RelatedElement a oslc:Property ;
    oslc:name "relationship_RelatedElement" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:relationship_RelatedElement ;
    oslc:range oslc_kerml:Element ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The Elements that are related by this Relationship, derived as the union of the <code>source</code> and <code>target</code> Elements of the Relationship."^^rdf:XMLLiteral .

:relationship_Source a oslc:Property ;
    oslc:name "relationship_Source" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:relationship_Source ;
    oslc:range oslc_kerml:Element ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>relatedElements from which this Relationship is considered to be directed.</code>."^^rdf:XMLLiteral .

:relationship_Target a oslc:Property ;
    oslc:name "relationship_Target" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:relationship_Target ;
    oslc:range oslc_kerml:Element ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>relatedElements</code> to which this Relationship is considered to be directed."^^rdf:XMLLiteral .

:resultExpressionMembership_OwnedResultExpression a oslc:Property ;
    oslc:name "resultExpressionMembership_OwnedResultExpression" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:resultExpressionMembership_OwnedResultExpression ;
    oslc:range oslc_kerml:Expression ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Expression</code> that provides the result for the owner of the <code>ResultExpressionMembership</code>."^^rdf:XMLLiteral .

:specialization_General a oslc:Property ;
    oslc:name "specialization_General" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:specialization_General ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "A <code>Type</code> with a superset of all instances of the <code>specific</code> <code>Type</code>, which might be the same set."^^rdf:XMLLiteral .

:specialization_OwningType a oslc:Property ;
    oslc:name "specialization_OwningType" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:specialization_OwningType ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Type</code> that is the <code>specific</code> <code>Type</code> of this <code>Specialization</code> and owns it as its <code>owningRelatedElement</code>."^^rdf:XMLLiteral .

:specialization_Specific a oslc:Property ;
    oslc:name "specialization_Specific" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:specialization_Specific ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "A <code>Type</code> with a subset of all instances of the <code>general</code> <code>Type</code>, which might be the same set."^^rdf:XMLLiteral .

:step_Behavior a oslc:Property ;
    oslc:name "step_Behavior" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:step_Behavior ;
    oslc:range oslc_kerml:Behavior ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Behaviors</code> that type this <code>Step</code>."^^rdf:XMLLiteral .

:step_Parameter a oslc:Property ;
    oslc:name "step_Parameter" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:step_Parameter ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>parameters</code> of this <code>Step</code>, which are defined as its <code>directedFeatures</code>, whose values are passed into and/or out of a performance of the <code>Step</code>."^^rdf:XMLLiteral .

:subclassification_OwningClassifier a oslc:Property ;
    oslc:name "subclassification_OwningClassifier" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:subclassification_OwningClassifier ;
    oslc:range oslc_kerml:Classifier ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Classifier</code> that owns this <code>Subclassification</code> relationship, which must also be its <code>subclassifier</code>."^^rdf:XMLLiteral .

:subclassification_Subclassifier a oslc:Property ;
    oslc:name "subclassification_Subclassifier" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:subclassification_Subclassifier ;
    oslc:range oslc_kerml:Classifier ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The more specific <code>Classifier</code> in this <code>Subclassification</code>."^^rdf:XMLLiteral .

:subclassification_Superclassifier a oslc:Property ;
    oslc:name "subclassification_Superclassifier" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:subclassification_Superclassifier ;
    oslc:range oslc_kerml:Classifier ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The more <code>general</code> Classifier in this <code>Subclassification</code>."^^rdf:XMLLiteral .

:subsetting_OwningFeature a oslc:Property ;
    oslc:name "subsetting_OwningFeature" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:subsetting_OwningFeature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "A <code>subsettingFeature</code> that is also the <code>owningRelatedElement</code> of this <code>Subsetting</code>."^^rdf:XMLLiteral .

:subsetting_SubsettedFeature a oslc:Property ;
    oslc:name "subsetting_SubsettedFeature" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:subsetting_SubsettedFeature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Feature</code> that is subsetted by the <code>subsettingFeature</code> of this <code>Subsetting</code>."^^rdf:XMLLiteral .

:subsetting_SubsettingFeature a oslc:Property ;
    oslc:name "subsetting_SubsettingFeature" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:subsetting_SubsettingFeature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Feature</code> that is a subset of the <code>subsettedFeature</code> of this <code>Subsetting</code>."^^rdf:XMLLiteral .

:succession_EffectStep a oslc:Property ;
    oslc:name "succession_EffectStep" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:succession_EffectStep ;
    oslc:range oslc_kerml:Step ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "<code>Steps</code> that represent occurrences that are side effects of the <code>transitionStep</code> occurring."^^rdf:XMLLiteral .

:succession_GuardExpression a oslc:Property ;
    oslc:name "succession_GuardExpression" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:succession_GuardExpression ;
    oslc:range oslc_kerml:Expression ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "<code>Expressions</code> that must evaluate to true before the <code>transitionStep</code> can occur."^^rdf:XMLLiteral .

:succession_TransitionStep a oslc:Property ;
    oslc:name "succession_TransitionStep" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:succession_TransitionStep ;
    oslc:range oslc_kerml:Step ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "A <code>Step</code> that is typed by the <code>Behavior</code> <code><em>TransitionPerformances::TransitionPerformance</em></code> (from the Kernel Semantic Library) that has this <code>Succession</code> as its <em><code>transitionLink</code></em>."^^rdf:XMLLiteral .

:succession_TriggerStep a oslc:Property ;
    oslc:name "succession_TriggerStep" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:succession_TriggerStep ;
    oslc:range oslc_kerml:Step ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "<code>Steps</code> that map incoming events to the timing of occurrences of the <code>transitionStep</code>. The values of <code>triggerStep</code> subset the list of acceptable events to be received by a <code>Behavior</code> or the object that performs it."^^rdf:XMLLiteral .

:textualRepresentation_Body a oslc:Property ;
    oslc:name "textualRepresentation_Body" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:textualRepresentation_Body ;
    oslc:range xsd:string ;
    oslc:readOnly false ;
    dcterms:description "The textual representation of the <code>representedElement</code> in the given <code>language</code>."^^rdf:XMLLiteral .

:textualRepresentation_Language a oslc:Property ;
    oslc:name "textualRepresentation_Language" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:textualRepresentation_Language ;
    oslc:range xsd:string ;
    oslc:readOnly false ;
    dcterms:description "The natural or artifical language in which the <code>body</code> text is written."^^rdf:XMLLiteral .

:textualRepresentation_RepresentedElement a oslc:Property ;
    oslc:name "textualRepresentation_RepresentedElement" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:textualRepresentation_RepresentedElement ;
    oslc:range oslc_kerml:Element ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Element</code> that is represented by this <code>TextualRepresentation</code>."^^rdf:XMLLiteral .

:typeFeaturing_FeatureOfType a oslc:Property ;
    oslc:name "typeFeaturing_FeatureOfType" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:typeFeaturing_FeatureOfType ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Feature</code> that is featured by the <code>featuringType</code>. It is the <code>source</code> of the <code>TypeFeaturing</code>."^^rdf:XMLLiteral .

:typeFeaturing_FeaturingType a oslc:Property ;
    oslc:name "typeFeaturing_FeaturingType" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:typeFeaturing_FeaturingType ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>Type</code> that features the <code>featureOfType</code>. It is the <code>target</code> of the <code>TypeFeaturing</code>."^^rdf:XMLLiteral .

:typeFeaturing_OwningFeatureOfType a oslc:Property ;
    oslc:name "typeFeaturing_OwningFeatureOfType" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:typeFeaturing_OwningFeatureOfType ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "A <code>featureOfType</code> that is also the <code>owningRelatedElement</code> of this <code>TypeFeaturing</code>."^^rdf:XMLLiteral .

:type_DifferencingType a oslc:Property ;
    oslc:name "type_DifferencingType" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:type_DifferencingType ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The interpretations of a <code>Type</code> with <code>differencingTypes</code> are asserted to be those of the first of those <code>Types</code>, but not including those of the remaining <code>Types</code>. For example, a <code>Classifier</code> might be the difference of a <code>Classifier</code> for people and another for people of a particular nationality, leaving people who are not of that nationality. Similarly, a feature of people might be the difference between a feature for their children and a <code>Classifier</code> for people of a particular sex, identifying their children not of that sex (because the interpretations of the children <code>Feature</code> that identify those of that sex are also interpretations of the <code>Classifier</code> for that sex)."^^rdf:XMLLiteral .

:type_DirectedFeature a oslc:Property ;
    oslc:name "type_DirectedFeature" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:type_DirectedFeature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>features</code> of this <code>Type</code> that have a non-null <code>direction</code>."^^rdf:XMLLiteral .

:type_EndFeature a oslc:Property ;
    oslc:name "type_EndFeature" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:type_EndFeature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "All <code>features</code> of this <code>Type</code> with <code>isEnd = true</code>."^^rdf:XMLLiteral .

:type_Feature a oslc:Property ;
    oslc:name "type_Feature" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:type_Feature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>ownedMemberFeatures</code> of the <code>featureMemberships</code> of this <code>Type</code>."^^rdf:XMLLiteral .

:type_FeatureMembership a oslc:Property ;
    oslc:name "type_FeatureMembership" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:type_FeatureMembership ;
    oslc:range oslc_kerml:FeatureMembership ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>FeatureMemberships</code> for <code>features</code> of this <code>Type</code>, which include all <code>ownedFeatureMemberships</code> and those <code>inheritedMemberships</code> that are <code>FeatureMemberships</code> (but does <em>not</em> include any <code>importedMemberships</code>)."^^rdf:XMLLiteral .

:type_InheritedFeature a oslc:Property ;
    oslc:name "type_InheritedFeature" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:type_InheritedFeature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "All the <code>memberFeatures</code> of the <code>inheritedMemberships</code> of this <code>Type</code> that are <code>FeatureMemberships</code>."^^rdf:XMLLiteral .

:type_InheritedMembership a oslc:Property ;
    oslc:name "type_InheritedMembership" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:type_InheritedMembership ;
    oslc:range oslc_kerml:Membership ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "All <code>Memberships</code> inherited by this <code>Type</code> via <code>Specialization</code> or <code>Conjugation</code>. These are included in the derived union for the <code>memberships</code> of the <code>Type</code>."^^rdf:XMLLiteral .

:type_Input a oslc:Property ;
    oslc:name "type_Input" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:type_Input ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "All <code>features</code> related to this <code>Type</code> by <code>FeatureMemberships</code> that have <code>direction</code> <code>in<code> or <code>inout<code>.</code></code></code></code>."^^rdf:XMLLiteral .

:type_IntersectingType a oslc:Property ;
    oslc:name "type_IntersectingType" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:type_IntersectingType ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The interpretations of a <code>Type</code> with <code>intersectingTypes</code> are asserted to be those in common among the <code>intersectingTypes</code>, which are the <code>Types</code> derived from the <code>intersectingType</code> of the <code>ownedIntersectings</code> of this <code>Type</code>. For example, a <code>Classifier</code> might be an intersection of <code>Classifiers</code> for people of a particular sex and of a particular nationality. Similarly, a feature for people's children of a particular sex might be the intersection of a <code>Feature</code> for their children and a <code>Classifier</code> for people of that sex (because the interpretations of the children <code>Feature</code> that identify those of that sex are also interpretations of the Classifier for that sex)."^^rdf:XMLLiteral .

:type_IsAbstract a oslc:Property ;
    oslc:name "type_IsAbstract" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:type_IsAbstract ;
    oslc:range xsd:boolean ;
    oslc:readOnly false ;
    dcterms:description "Indicates whether instances of this <code>Type</code> must also be instances of at least one of its specialized <code>Types</code>."^^rdf:XMLLiteral .

:type_IsConjugated a oslc:Property ;
    oslc:name "type_IsConjugated" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:type_IsConjugated ;
    oslc:range xsd:boolean ;
    oslc:readOnly false ;
    dcterms:description "Indicates whether this <code>Type</code> has an <code>ownedConjugator</code>."^^rdf:XMLLiteral .

:type_IsSufficient a oslc:Property ;
    oslc:name "type_IsSufficient" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:type_IsSufficient ;
    oslc:range xsd:boolean ;
    oslc:readOnly false ;
    dcterms:description "Whether all things that meet the classification conditions of this <code>Type</code> must be classified by the <code>Type</code>."^^rdf:XMLLiteral .

:type_Multiplicity a oslc:Property ;
    oslc:name "type_Multiplicity" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:type_Multiplicity ;
    oslc:range oslc_kerml:Multiplicity ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "An <code>ownedMember</code> of this <code>Type</code> that is a <code>Multiplicity</code>, which constraints the cardinality of the <code>Type</code>. If there is no such <code>ownedMember</code>, then the cardinality of this <code>Type</code> is constrained by all the <code>Multiplicity</code> constraints applicable to any direct supertypes."^^rdf:XMLLiteral .

:type_Output a oslc:Property ;
    oslc:name "type_Output" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:type_Output ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "All <code>features</code> related to this <code>Type</code> by <code>FeatureMemberships</code> that have <code>direction</code> <code>out<code> or <code>inout<code>.</code></code></code></code>."^^rdf:XMLLiteral .

:type_OwnedConjugator a oslc:Property ;
    oslc:name "type_OwnedConjugator" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc_kerml:type_OwnedConjugator ;
    oslc:range oslc_kerml:Conjugation ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "A <code>Conjugation</code> owned by this <code>Type</code> for which the <code>Type</code> is the <code>originalType</code>."^^rdf:XMLLiteral .

:type_OwnedDifferencing a oslc:Property ;
    oslc:name "type_OwnedDifferencing" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:type_OwnedDifferencing ;
    oslc:range oslc_kerml:Differencing ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>ownedRelationships</code> of this <code>Type</code> that are <code>Differencings</code>, having this <code>Type</code> as their <code>typeDifferenced</code>."^^rdf:XMLLiteral .

:type_OwnedDisjoining a oslc:Property ;
    oslc:name "type_OwnedDisjoining" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:type_OwnedDisjoining ;
    oslc:range oslc_kerml:Disjoining ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>ownedRelationships</code> of this <code>Type</code> that are <code>Disjoinings</code>, for which the <code>Type</code> is the <code>typeDisjoined</code> <code>Type</code>."^^rdf:XMLLiteral .

:type_OwnedEndFeature a oslc:Property ;
    oslc:name "type_OwnedEndFeature" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:type_OwnedEndFeature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "All <code>endFeatures</code> of this <code>Type</code> that are <code>ownedFeatures</code>."^^rdf:XMLLiteral .

:type_OwnedFeature a oslc:Property ;
    oslc:name "type_OwnedFeature" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:type_OwnedFeature ;
    oslc:range oslc_kerml:Feature ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>ownedMemberFeatures</code> of the <code>ownedFeatureMemberships</code> of this <code>Type</code>."^^rdf:XMLLiteral .

:type_OwnedFeatureMembership a oslc:Property ;
    oslc:name "type_OwnedFeatureMembership" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:type_OwnedFeatureMembership ;
    oslc:range oslc_kerml:FeatureMembership ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>ownedMemberships</code> of this <code>Type</code> that are <code>FeatureMemberships</code>, for which the <code>Type</code> is the <code>owningType</code>. Each such <code>FeatureMembership</code> identifies an <code>ownedFeature</code> of the <code>Type</code>."^^rdf:XMLLiteral .

:type_OwnedIntersecting a oslc:Property ;
    oslc:name "type_OwnedIntersecting" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:type_OwnedIntersecting ;
    oslc:range oslc_kerml:Intersecting ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>ownedRelationships</code> of this <code>Type</code> that are <code>Intersectings</code>, have the <code>Type</code> as their <code>typeIntersected</code>."^^rdf:XMLLiteral .

:type_OwnedSpecialization a oslc:Property ;
    oslc:name "type_OwnedSpecialization" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:type_OwnedSpecialization ;
    oslc:range oslc_kerml:Specialization ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>ownedRelationships</code> of this <code>Type</code> that are <code>Specializations</code>, for which the <code>Type</code> is the <code>specific</code> <code>Type</code>."^^rdf:XMLLiteral .

:type_OwnedUnioning a oslc:Property ;
    oslc:name "type_OwnedUnioning" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:type_OwnedUnioning ;
    oslc:range oslc_kerml:Unioning ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The <code>ownedRelationships</code> of this <code>Type</code> that are <code>Unionings</code>, having the <code>Type</code> as their <code>typeUnioned</code>."^^rdf:XMLLiteral .

:type_UnioningType a oslc:Property ;
    oslc:name "type_UnioningType" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc_kerml:type_UnioningType ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The interpretations of a <code>Type</code> with <code>unioningTypes</code> are asserted to be the same as those of all the <code>unioningTypes</code> together, which are the <code>Types</code> derived from the <code>unioningType</code> of the <code>ownedUnionings</code> of this <code>Type</code>. For example, a <code>Classifier</code> for people might be the union of <code>Classifiers</code> for all the sexes. Similarly, a feature for people's children might be the union of features dividing them in the same ways as people in general."^^rdf:XMLLiteral .

:unioning_TypeUnioned a oslc:Property ;
    oslc:name "unioning_TypeUnioned" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:unioning_TypeUnioned ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "<code>Type</code> with interpretations partly determined by <code>unioningType</code>, as described in <code>Type::unioningType</code>."^^rdf:XMLLiteral .

:unioning_UnioningType a oslc:Property ;
    oslc:name "unioning_UnioningType" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition oslc_kerml:unioning_UnioningType ;
    oslc:range oslc_kerml:Type ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:Resource ;
    dcterms:description "<code>Type</code> that partly determines interpretations of <code>typeUnioned</code>, as described in <code>Type::unioningType</code>."^^rdf:XMLLiteral .

:contributor a oslc:Property ;
    oslc:name "contributor" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition dcterms:contributor ;
    oslc:range oslc:Any ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:AnyResource ;
    dcterms:description "Contributor or contributors to the resource. It is likely that the target resource will be a foaf:Person but that is not necessarily the case."^^rdf:XMLLiteral .

:created a oslc:Property ;
    oslc:name "created" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition dcterms:created ;
    oslc:readOnly false ;
    oslc:valueType xsd:dateTime ;
    dcterms:description "Timestamp of resource creation."^^rdf:XMLLiteral .

:creator a oslc:Property ;
    oslc:name "creator" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition dcterms:creator ;
    oslc:range oslc:Any ;
    oslc:readOnly false ;
    oslc:representation oslc:Either ;
    oslc:valueType oslc:AnyResource ;
    dcterms:description "Creator or creators of the resource. It is likely that the target resource will be a foaf:Person but that is not necessarily the case."^^rdf:XMLLiteral .

:dctype a oslc:Property ;
    oslc:name "dctype" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition dcterms:type ;
    oslc:readOnly false ;
    oslc:valueType xsd:string ;
    dcterms:description "A short string representation for the type, for example ‘Car’."^^rdf:XMLLiteral .

:derives a oslc:Property ;
    oslc:name "derives" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition jazz_am:derives ;
    oslc:range oslc:Any ;
    oslc:readOnly false ;
    oslc:representation oslc:Reference ;
    oslc:valueType oslc:Resource ;
    dcterms:description """The resource that derives from another resource originated from or is
significantly influenced by the referenced resource. For example a model element derives from a
requirement."""^^rdf:XMLLiteral .

:description a oslc:Property ;
    oslc:name "description" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition dcterms:description ;
    oslc:readOnly false ;
    oslc:valueType rdf:XMLLiteral ;
    dcterms:description "Descriptive text about resource represented as rich text in XHTML content."^^rdf:XMLLiteral .

:elaborates a oslc:Property ;
    oslc:name "elaborates" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition jazz_am:elaborates ;
    oslc:range oslc:Any ;
    oslc:readOnly false ;
    oslc:representation oslc:Reference ;
    oslc:valueType oslc:Resource ;
    dcterms:description "This resource elaborates the referenced resource."^^rdf:XMLLiteral .

:external a oslc:Property ;
    oslc:name "external" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition jazz_am:external ;
    oslc:range oslc:Any ;
    oslc:readOnly false ;
    oslc:representation oslc:Reference ;
    oslc:valueType oslc:Resource ;
    dcterms:description "A generic link from a resource to an external web page."^^rdf:XMLLiteral .

:identifier a oslc:Property ;
    oslc:name "identifier" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition dcterms:identifier ;
    oslc:readOnly true ;
    oslc:valueType xsd:string ;
    dcterms:description """A unique identifier for a resource. Typically read-only and assigned by the
service provider when a resource is created. Not typically intended for end-user display."""^^rdf:XMLLiteral .

:instanceShape a oslc:Property ;
    oslc:name "instanceShape" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc:instanceShape ;
    oslc:range oslc:ResourceShape ;
    oslc:readOnly false ;
    oslc:representation oslc:Reference ;
    oslc:valueType oslc:Resource ;
    dcterms:description """The URI of a Resource Shape that describes the possible properties, occurrence,
value types, allowed values and labels. This shape information is useful in displaying the subject
resource as well as guiding clients in performing modifications. Instance shapes may be specific
to the authenticated user associated with the request that retrieved the resource, the current
state of the resource and other factors and thus should not be cached."""^^rdf:XMLLiteral .

:modified a oslc:Property ;
    oslc:name "modified" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition dcterms:modified ;
    oslc:readOnly false ;
    oslc:valueType xsd:dateTime ;
    dcterms:description "Timestamp of latest resource modification."^^rdf:XMLLiteral .

:refine a oslc:Property ;
    oslc:name "refine" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition jazz_am:refine ;
    oslc:range oslc:Any ;
    oslc:readOnly false ;
    oslc:representation oslc:Reference ;
    oslc:valueType oslc:Resource ;
    dcterms:description """The target is a refinement of the source. (e.g. a use case scenario
might be a refinement of a textual requirement that describes the interaction)."""^^rdf:XMLLiteral .

:satisfy a oslc:Property ;
    oslc:name "satisfy" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition jazz_am:satisfy ;
    oslc:range oslc:Any ;
    oslc:readOnly false ;
    oslc:representation oslc:Reference ;
    oslc:valueType oslc:Resource ;
    dcterms:description """The model element satisfies the requirement (e.g. The use case
satisfies a functional requirement)."""^^rdf:XMLLiteral .

:serviceProvider a oslc:Property ;
    oslc:name "serviceProvider" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition oslc:serviceProvider ;
    oslc:range oslc:ServiceProvider ;
    oslc:readOnly false ;
    oslc:representation oslc:Reference ;
    oslc:valueType oslc:Resource ;
    dcterms:description """A link to the resource's OSLC Service Provider. There may be cases when the
subject resource is available from a service provider that implements multiple domain
specifications, which could result in multiple values for this property."""^^rdf:XMLLiteral .

:shortTitle a oslc:Property ;
    oslc:name "shortTitle" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition oslc:shortTitle ;
    oslc:readOnly false ;
    oslc:valueType rdf:XMLLiteral ;
    dcterms:description "{{Short name identifying a resource, often used as an abbreviated identifier for presentation to end-users. SHOULD include only content that is valid inside an XHTML &lt;span&gt; element}}."^^rdf:XMLLiteral .

:source a oslc:Property ;
    oslc:name "source" ;
    oslc:occurs oslc:Zero-or-one ;
    oslc:propertyDefinition dcterms:source ;
    oslc:range oslc:Any ;
    oslc:readOnly false ;
    oslc:representation oslc:Reference ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The resource URI a client can perform a get on to obtain the original non-OSLC AM formatted resource that was used to create this resource. The source resource is usually a binary or proprietary format that the service provider can consume and convert into an OSLC AM format. The service may use content negotiation with the Accept header to obtain the desired content type."^^rdf:XMLLiteral .

:title a oslc:Property ;
    oslc:name "title" ;
    oslc:occurs oslc:Exactly-one ;
    oslc:propertyDefinition dcterms:title ;
    oslc:readOnly false ;
    oslc:valueType rdf:XMLLiteral ;
    dcterms:description "Title of the resource represented as rich text in XHTML content."^^rdf:XMLLiteral .

:trace a oslc:Property ;
    oslc:name "trace" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition jazz_am:trace ;
    oslc:range oslc:Any ;
    oslc:readOnly false ;
    oslc:representation oslc:Reference ;
    oslc:valueType oslc:Resource ;
    dcterms:description """The model element has a trace to the requirement (e.g. An attribute
or its value are traced to a requirement)."""^^rdf:XMLLiteral .

:type a oslc:Property ;
    oslc:name "type" ;
    oslc:occurs oslc:Zero-or-many ;
    oslc:propertyDefinition rdf:type ;
    oslc:range rdfs:Class ;
    oslc:readOnly false ;
    oslc:representation oslc:Reference ;
    oslc:valueType oslc:Resource ;
    dcterms:description "The resource type URIs."^^rdf:XMLLiteral .

